import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as s,c,a as e,b as i,d as t,e as r}from"./app-603Yk0up.js";const l="/DailyNotes/assets/CVE_2018_2894_1-Pv-O_WYq.png",d="/DailyNotes/assets/01-H-umZtWj.png",g="/DailyNotes/assets/02-r2CqSkeL.png",h="/DailyNotes/assets/03-k_bWWz3c.png",p="/DailyNotes/assets/06-oiMbYQJU.png",u="/DailyNotes/assets/04-l3m-sswP.png",_="/DailyNotes/assets/05-_mvDHrJQ.png",b={},f=e("h1",{id:"漏洞名称-weblogic-任意文件上传漏洞",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞名称-weblogic-任意文件上传漏洞","aria-hidden":"true"},"#"),i(" 漏洞名称：Weblogic 任意文件上传漏洞")],-1),m=e("hr",null,null,-1),x=e("h2",{id:"漏洞介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞介绍","aria-hidden":"true"},"#"),i(" 漏洞介绍")],-1),w={href:"http://www.cnnvd.org.cn/index.html",target:"_blank",rel:"noopener noreferrer"},v=r('<p>CNCERT发现了Oracle公司出品的基于JavaEE结构的中间件WebLogic产品存在一个远程上传漏洞，并得到了厂商的确认，危害程度评分高达9.8分。WebLogic管理端未授权的两个页面存在任意上传getshell漏洞，可直接获取权限。两个页面分别为<code>/ws_utc/begin.do</code>和<code>/ws_utc/config.do</code></p><h3 id="漏洞危害" tabindex="-1"><a class="header-anchor" href="#漏洞危害" aria-hidden="true">#</a> 漏洞危害</h3><p>WebLogic管理端未授权的两个页面存在任意上传getshell漏洞，可直接获取权限。</p><hr><h3 id="影响范围" tabindex="-1"><a class="header-anchor" href="#影响范围" aria-hidden="true">#</a> 影响范围</h3><ul><li>weblogic 10.3.6.0</li><li>weblogic 12.1.3.0</li><li>weblogic 12.2.1.2</li><li>weblogic 12.2.1.3</li></ul><hr><h2 id="漏洞原理" tabindex="-1"><a class="header-anchor" href="#漏洞原理" aria-hidden="true">#</a> 漏洞原理</h2>',8),y={href:"http://ip:7001/ws_utc/config.do",target:"_blank",rel:"noopener noreferrer"},E=r('<hr><h2 id="漏洞利用" tabindex="-1"><a class="header-anchor" href="#漏洞利用" aria-hidden="true">#</a> 漏洞利用</h2><hr><h3 id="靶机环境" tabindex="-1"><a class="header-anchor" href="#靶机环境" aria-hidden="true">#</a> 靶机环境</h3><p>vulhub/weblogic/CVE-2018-2894</p><figure><img src="'+l+'" alt="CVE_2018_2894_1" tabindex="0" loading="lazy"><figcaption>CVE_2018_2894_1</figcaption></figure><hr><h3 id="利用方式" tabindex="-1"><a class="header-anchor" href="#利用方式" aria-hidden="true">#</a> 利用方式</h3><p>工具：weblogicScanner https://github.com/0xn0ne/weblogicScanner，vulmap</p><h4 id="探测确认" tabindex="-1"><a class="header-anchor" href="#探测确认" aria-hidden="true">#</a> 探测确认</h4><p>使用 weblogicScanner探测是否存在该漏洞</p><figure><img src="'+d+`" alt="01" tabindex="0" loading="lazy"><figcaption>01</figcaption></figure><p>​ <strong>结果</strong>：发现漏洞</p><h4 id="利用过程" tabindex="-1"><a class="header-anchor" href="#利用过程" aria-hidden="true">#</a> 利用过程</h4><ul><li>访问http://your-ip:7001/console页面，因为是靶场环境，且Web Service Test Page在“生产模式”下默认不开启，所以该漏洞有一定限制。在这里通过靶场自带的命令可以获得登录密码，并登录。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose logs | grep password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+g+`" alt="02" tabindex="0" loading="lazy"><figcaption>02</figcaption></figure><p>例如我这里用户名为weblogic 密码dHIM3xnc</p><ul><li><p>在后台页面左侧“域结构”中点击“base_domain”，在右侧下滑页面中点击“高级”-“启用Web服务测试页”，然后保存。</p></li><li><p>访问http://IP:7001/ws_utc/config.do页面，并修改“Work Home Dir”为如下目录提交</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>P.S. 这样设置的目的是将目录设置为“ws_utc”应用的css静态文件目录，而访问这个目录是不需要权限的。这也是该漏洞能够成功利用的关键</p><figure><img src="`+h+'" alt="03" tabindex="0" loading="lazy"><figcaption>03</figcaption></figure><ul><li>在上一个页面的左侧点击安全-添加，上传蚁剑jsp木马</li></ul><figure><img src="'+p+'" alt="06" tabindex="0" loading="lazy"><figcaption>06</figcaption></figure><ul><li>上传之后，在响应包中查看时间戳</li></ul><p>使用蚁剑连接：<code>http://your_ip:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]</code></p><figure><img src="'+u+'" alt="04" tabindex="0" loading="lazy"><figcaption>04</figcaption></figure><figure><img src="'+_+'" alt="05" tabindex="0" loading="lazy"><figcaption>05</figcaption></figure><hr><h2 id="威胁防护建议" tabindex="-1"><a class="header-anchor" href="#威胁防护建议" aria-hidden="true">#</a> 威胁防护建议</h2><p>1.设置Config.do、begin.do页面登录授权后访问；</p><p>2.IPS等防御产品可以加入相应的特征；</p><p>3.升级到官方最新版本。</p>',33);function W(C,N){const a=o("ExternalLinkIcon");return s(),c("div",null,[f,m,x,e("p",null,[e("a",w,[i("国家信息安全漏洞库 (cnnvd.org.cn)"),t(a)])]),v,e("p",null,[i("CVE-2020-2894是基于JavaEE结构的中间件WebLogic产品的一个远程上传漏洞，两个页面分为/ws_utc/begin.do和/ws_utc/config.do。访问 "),e("a",y,[i("http://IP:7001/ws_utc/config.do"),t(a)]),i(" 页面后点击左侧的“安全”菜单，添加一个Keystore，任意设置名字和密码，文件也是任意格式上传。但Web Service Test Page在“生产模式”下默认不开启，所以该漏洞有一定限制。")]),E])}const S=n(b,[["render",W],["__file","weblogic_CVE-2018-2894.html.vue"]]);export{S as default};
