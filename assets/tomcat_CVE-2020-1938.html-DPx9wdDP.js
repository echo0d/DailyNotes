import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as t,b as l,d as o,e as n,r as i,o as p}from"./app-vU8izl1I.js";const s="/DailyNotes/assets/04-DMW-qlXW.png",d="/DailyNotes/assets/01-CFTfBtY2.png",h="/DailyNotes/assets/02-CyyWi5Cl.png",m="/DailyNotes/assets/03-CmxRm9Dw.png",u={},g={href:"http://www.cnnvd.org.cn/index.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.chaitin.cn/zh/ghostcat",target:"_blank",rel:"noopener noreferrer"};function f(b,e){const a=i("ExternalLinkIcon");return p(),c("div",null,[e[3]||(e[3]=t("h1",{id:"漏洞名称-aapache-tomcat-ajp-文件包含漏洞",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#漏洞名称-aapache-tomcat-ajp-文件包含漏洞"},[t("span",null,"漏洞名称：Aapache Tomcat AJP 文件包含漏洞")])],-1)),e[4]||(e[4]=t("hr",null,null,-1)),e[5]||(e[5]=t("h2",{id:"漏洞介绍",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#漏洞介绍"},[t("span",null,"漏洞介绍")])],-1)),t("blockquote",null,[t("p",null,[t("a",g,[e[0]||(e[0]=o("国家信息安全漏洞库 (cnnvd.org.cn)",-1)),n(a)])])]),t("p",null,[t("a",T,[e[1]||(e[1]=o("Ghostcat（幽灵猫）",-1)),n(a)]),e[2]||(e[2]=o(" 是由长亭科技安全研究员发现的存在于 Tomcat 中的安全漏洞，由于 Tomcat AJP 协议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 webapp 目录下的任意文件。",-1))]),e[6]||(e[6]=l(`<hr><h3 id="漏洞危害" tabindex="-1"><a class="header-anchor" href="#漏洞危害"><span>漏洞危害</span></a></h3><p>攻击者有可能实现任意文件读取，例如可以读取 webapp 配置文件或源代码。此外在目标应用有文件上传功能的情况下，配合文件包含的利用还可以达到远程代码执行的危害。</p><hr><h3 id="影响范围" tabindex="-1"><a class="header-anchor" href="#影响范围"><span>影响范围</span></a></h3><p>Apache Tomcat 6 Apache Tomcat 7 &lt; 7.0.100 Apache Tomcat 8 &lt; 8.5.51 Apache Tomcat 9 &lt; 9.0.31</p><hr><h2 id="漏洞原理" tabindex="-1"><a class="header-anchor" href="#漏洞原理"><span>漏洞原理</span></a></h2><p>Tomcat 服务器通过 Connector 连接器组件与客户程序建立连接，Connector 表示接收请求并返回响应的端点。即 Connector 组件负责接收客户的请求，以及把 Tomcat 服务器的响应结果发送给客户。Tomcat 在 server.xml 中配置了两种连接器：HTTP Connector 和 AJP Connector。拥有 HTTP 连接器，Tomcat 才能成为一个 web 服务器，但还额外可处理 Servlet 和 jsp。AJP 连接器可以通过 AJP 协议和另一个 web 容器进行交互。配置如下：</p><pre><code>&lt;!-- Define a non-SSL/TLS HTTP/1.1 Connector on port 8080 --&gt;
&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;
           connectionTimeout=&quot;20000&quot;
           redirectPort=&quot;8443&quot; /&gt;

&lt;!-- Define an AJP 1.3 Connector on port 8009 --&gt;
&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;
</code></pre><figure><img src="`+s+`" alt="04" tabindex="0" loading="lazy"><figcaption>04</figcaption></figure><p>Tomcat 在接收 AJP 请求的时候调用<code>org.apache.coyote.ajp.AjpProcessor</code>来处理 ajp 消息，其中，<code>prepareRequest</code>将 AJP 里面的内容取出来设置成<code>request</code>对象的属性，因此可以控制<code>request</code>对象的三个属性:<code>javax.servlet.include.request_uri</code>、<code>javax.servlet.include.path_info</code>和<code>javax.servlet.include.servlet_path</code>，然后封装成对应的 request 之后，执行相应的操作，例如构造下面参数，实现文件读取</p><p>该漏洞主要原因就是：</p><ol><li>AJP Connector 暴露给客户端了，AJP 是 Tomcat 和其他 web 服务器之间内部使用的。</li><li>AJP 1.3 协议存在缺陷，导致相关参数可控，攻击者利用该漏洞可通过构造特定参数，读取服务器 webapp 下的任意文件。若服务器端同时存在文件上传功能，攻击者可进一步实现远程代码的执行。</li></ol><hr><h3 id="靶机环境" tabindex="-1"><a class="header-anchor" href="#靶机环境"><span>靶机环境</span></a></h3><p>vulhub/tomcat/CVE-2020-1938</p><hr><h3 id="利用方式-1" tabindex="-1"><a class="header-anchor" href="#利用方式-1"><span>利用方式 1</span></a></h3><p>漏洞探测工具 xray（https://github.com/chaitin/xray）进行探测，探测出tomcat版本为9.0.30</p><pre><code>./xray_linux_amd64 servicescan --target 192.168.1.189:8009
</code></pre><figure><img src="`+d+'" alt="01" tabindex="0" loading="lazy"><figcaption>01</figcaption></figure><figure><img src="'+h+`" alt="02" tabindex="0" loading="lazy"><figcaption>02</figcaption></figure><hr><h3 id="利用方式-2" tabindex="-1"><a class="header-anchor" href="#利用方式-2"><span>利用方式 2</span></a></h3><p>使用https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi 中的 poc，读取 WEB-INF/web.xml 文件</p><pre><code>python ./CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.1.189 -p 8009 -f WEB-INF/web.xml
</code></pre><figure><img src="`+m+'" alt="03" tabindex="0" loading="lazy"><figcaption>03</figcaption></figure><hr><h2 id="威胁防护建议" tabindex="-1"><a class="header-anchor" href="#威胁防护建议"><span>威胁防护建议</span></a></h2><hr><h3 id="用户处置建议" tabindex="-1"><a class="header-anchor" href="#用户处置建议"><span>用户处置建议</span></a></h3><ol><li><p>更新到安全版本：Apache Tomcat 7.0.100、8.5.51、9.0.31</p></li><li><p>关闭 AJP 服务：修改 Tomcat 配置文件 Service.xml 将<code>&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;</code>注释掉</p></li><li><p>配置 ajp 配置中的 secretRequired 跟 secret 属性来限制认证</p></li></ol><hr><h3 id="安全产品检测建议" tabindex="-1"><a class="header-anchor" href="#安全产品检测建议"><span>安全产品检测建议</span></a></h3><p>检测<code>javax.servlet.include.request_uri</code>、<code>javax.servlet.include.path_info</code>和<code>javax.servlet.include.servlet_path</code></p>',36))])}const A=r(u,[["render",f]]),v=JSON.parse('{"path":"/CyberSecurity/RedTeam/2-WebVulnerability/Tomcat/tomcat_CVE-2020-1938.html","title":"漏洞名称：Aapache Tomcat AJP 文件包含漏洞","lang":"zh-CN","frontmatter":{"category":"网络安全","tag":"漏洞分析","description":"漏洞名称：Aapache Tomcat AJP 文件包含漏洞 漏洞介绍 国家信息安全漏洞库 (cnnvd.org.cn) Ghostcat（幽灵猫） 是由长亭科技安全研究员发现的存在于 Tomcat 中的安全漏洞，由于 Tomcat AJP 协议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 ...","head":[["meta",{"property":"og:url","content":"https://echo0d.github.io/DailyNotes/CyberSecurity/RedTeam/2-WebVulnerability/Tomcat/tomcat_CVE-2020-1938.html"}],["meta",{"property":"og:site_name","content":"echo0d-notes"}],["meta",{"property":"og:title","content":"漏洞名称：Aapache Tomcat AJP 文件包含漏洞"}],["meta",{"property":"og:description","content":"漏洞名称：Aapache Tomcat AJP 文件包含漏洞 漏洞介绍 国家信息安全漏洞库 (cnnvd.org.cn) Ghostcat（幽灵猫） 是由长亭科技安全研究员发现的存在于 Tomcat 中的安全漏洞，由于 Tomcat AJP 协议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-04T09:27:16.000Z"}],["meta",{"property":"article:author","content":"echo0d"}],["meta",{"property":"article:tag","content":"漏洞分析"}],["meta",{"property":"article:modified_time","content":"2025-06-04T09:27:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"漏洞名称：Aapache Tomcat AJP 文件包含漏洞\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-04T09:27:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"echo0d\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"漏洞介绍","slug":"漏洞介绍","link":"#漏洞介绍","children":[{"level":3,"title":"漏洞危害","slug":"漏洞危害","link":"#漏洞危害","children":[]},{"level":3,"title":"影响范围","slug":"影响范围","link":"#影响范围","children":[]}]},{"level":2,"title":"漏洞原理","slug":"漏洞原理","link":"#漏洞原理","children":[{"level":3,"title":"靶机环境","slug":"靶机环境","link":"#靶机环境","children":[]},{"level":3,"title":"利用方式 1","slug":"利用方式-1","link":"#利用方式-1","children":[]},{"level":3,"title":"利用方式 2","slug":"利用方式-2","link":"#利用方式-2","children":[]}]},{"level":2,"title":"威胁防护建议","slug":"威胁防护建议","link":"#威胁防护建议","children":[{"level":3,"title":"用户处置建议","slug":"用户处置建议","link":"#用户处置建议","children":[]},{"level":3,"title":"安全产品检测建议","slug":"安全产品检测建议","link":"#安全产品检测建议","children":[]}]}],"git":{"createdTime":1731665131000,"updatedTime":1749029236000,"contributors":[{"name":"echo0d","email":"echo0d@163.com","commits":3}]},"readingTime":{"minutes":2.52,"words":756},"filePathRelative":"CyberSecurity/RedTeam/2-WebVulnerability/Tomcat/tomcat_CVE-2020-1938.md","localizedDate":"2024年11月15日","excerpt":"\\n","autoDesc":true}');export{A as comp,v as data};
