import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as n,d as l,e as d,b as c,o as t,r as i}from"./app-KRcqTjW-.js";const r={},p={href:"https://wangdoc.com/clang/",target:"_blank",rel:"noopener noreferrer"};function u(m,e){const a=i("ExternalLinkIcon");return t(),o("div",null,[e[1]||(e[1]=n("h1",{id:"c-语言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c-语言"},[n("span",null,"C 语言")])],-1)),n("blockquote",null,[n("p",null,[n("a",p,[e[0]||(e[0]=l("C 语言教程 - 网道")),d(a)])])]),e[2]||(e[2]=c(`<p>C 语言是一种编译型语言，源码都是文本文件，本身无法执行。必须通过编译器，生成二进制的可执行文件，才能执行。编译器将代码从文本翻译成二进制指令的过程，就称为编译阶段，又称为“编译时”（compile time），跟运行阶段（又称为“运行时”）相区分。</p><p>目前，最常见的 C 语言编译器是自由软件基金会推出的 GCC 编译器，它可以免费使用。Linux 和 Mac 系统可以直接安装 GCC，Windows 系统可以安装 MinGW。线编译器举例：</p><ul><li>CodingGround: https://tutorialspoint.com/compile_c_online.php</li><li>OnlineGDB: https://onlinegdb.com/online_c_compiler</li></ul><h2 id="hello-world-示例" tabindex="-1"><a class="header-anchor" href="#hello-world-示例"><span>Hello World 示例</span></a></h2><p>C 语言的源代码文件，通常以后缀名<code>.c</code>结尾。下面是一个简单的 C 程序<code>hello.c</code>。它就是一个普通的文本文件，任何文本编译器都能用来写。</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个程序的唯一作用，就是在屏幕上面显示“Hello World”。</p><p>这里不讲解这些代码是什么意思，只是作为一个例子，让大家看看 C 代码应该怎么编译和运行。假设你已经安装好了 GCC 编译器，可以打开命令行，执行下面的命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ gcc hello.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令使用<code>gcc</code>编译器，将源文件<code>hello.c</code>编译成二进制代码。注意，<code>$</code>是命令行提示符，你真正需要输入的是<code>$</code>后面的部分。</p><p>运行这个命令以后，默认会在当前目录下生成一个编译产物文件<code>a.out</code>（assembler output 的缩写，Windows 平台为<code>a.exe</code>）。执行该文件，就会在屏幕上输出<code>Hello World</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ ./a.out
Hello World
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>GCC 的<code>-o</code>参数（output 的缩写）可以指定编译产物的文件名。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ gcc <span class="token parameter variable">-o</span> hello hello.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令的<code>-o hello</code>指定，编译产物的文件名为<code>hello</code>（取代默认的<code>a.out</code>）。编译后就会生成一个名叫<code>hello</code>的可执行文件，相当于为<code>a.out</code>指定了名称。执行该文件，也会得到同样的结果。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ ./hello
Hello World
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>GCC 的<code>-std=</code>参数（standard 的缩写）还可以指定按照哪个 C 语言的标准进行编译。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ gcc <span class="token parameter variable">-std</span><span class="token operator">=</span>c99 hello.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令指定按照 C99 标准进行编译。</p><p>注意，<code>-std</code>后面需要用<code>=</code>连接参数，而不是像上面的<code>-o</code>一样用空格，并且<code>=</code>前后也不能有多余的空格。</p>`,20))])}const b=s(r,[["render",u],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/develop/C/","title":"C 语言","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Hello World 示例","slug":"hello-world-示例","link":"#hello-world-示例","children":[]}],"git":{"createdTime":1734332093000,"updatedTime":1734332093000,"contributors":[{"name":"echo0d","email":"echo0d@163.com","commits":1}]},"readingTime":{"minutes":2.07,"words":621},"filePathRelative":"develop/C/README.md","localizedDate":"2024年12月16日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://wangdoc.com/clang/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">C 语言教程 - 网道</a></p>\\n</blockquote>\\n<p>C 语言是一种编译型语言，源码都是文本文件，本身无法执行。必须通过编译器，生成二进制的可执行文件，才能执行。编译器将代码从文本翻译成二进制指令的过程，就称为编译阶段，又称为“编译时”（compile time），跟运行阶段（又称为“运行时”）相区分。</p>\\n<p>目前，最常见的 C 语言编译器是自由软件基金会推出的 GCC 编译器，它可以免费使用。Linux 和 Mac 系统可以直接安装 GCC，Windows 系统可以安装 MinGW。线编译器举例：</p>"}');export{b as comp,g as data};
