import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as r,c as s,a as t,b as d,d as n,e as l}from"./app-mnQnk_A6.js";const o="/DailyNotes/assets/image-20240131161104043-O8Wg0i7O.png",c="/DailyNotes/assets/image-20240131173738484-_XQixvdM.png",u="/DailyNotes/assets/image-20240131174339576-TT0i9vP4.png",h="/DailyNotes/assets/image-20240131175420177-lBLSy7zZ.png",p="/DailyNotes/assets/1568045-20190420014404372-1216036035-9BhcLOuU.png",b="/DailyNotes/assets/image-20240206170415976-5yRK296q.png",g={},v=t("h1",{id:"_1-linux权限提升",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_1-linux权限提升","aria-hidden":"true"},"#"),d(" 1-Linux权限提升")],-1),m={href:"https://zhuanlan.zhihu.com/p/428433013?utm_id=0",target:"_blank",rel:"noopener noreferrer"},x=l(`<h2 id="_1-linux中的用户和组" tabindex="-1"><a class="header-anchor" href="#_1-linux中的用户和组" aria-hidden="true">#</a> 1. Linux中的用户和组</h2><h3 id="_1-1-用户和组概念" tabindex="-1"><a class="header-anchor" href="#_1-1-用户和组概念" aria-hidden="true">#</a> 1.1 用户和组概念</h3><ul><li>超级管理员（root）</li><li>系统用户</li><li>普通用户</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@localhost ~]# id root
uid=0(root) gid=0(root) groups=0(root)
[root@localhost ~]#
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个用户被分配一个唯一的用户标识符（UID），用于标识和管理用户。</p><table><thead><tr><th>用户分类</th><th>UID</th></tr></thead><tbody><tr><td>超级管理员</td><td>0</td></tr><tr><td>系统用户</td><td>1-499（CentOS6及以前），1-999（CentOS7及以后）</td></tr><tr><td>普通用户</td><td>&gt;=500（CentOS6及以前），&gt;=1000（CentOS7及以后）</td></tr></tbody></table><p>GID（组标识符）用于标识和管理用户所属的组。每个用户可以属于一个或多个组，而每个组也有一个唯一的GID。</p><table><thead><tr><th>用户组</th><th>GID</th></tr></thead><tbody><tr><td>root组</td><td>0</td></tr><tr><td>系统组</td><td>1-999</td></tr><tr><td>普通组</td><td>&gt;=1000</td></tr></tbody></table><p>先有组，再有用户：</p><ul><li>用户必须有且只有一个基本组。</li><li>当创建一个用户时，如果没有指定基本组，会先创建一个与该用户同名的组，再创建用户。</li><li>一个用户可以有多个附加组。</li><li>基本组内没有任何用户，才能被删除。</li></ul><h3 id="_1-2-相关文件" tabindex="-1"><a class="header-anchor" href="#_1-2-相关文件" aria-hidden="true">#</a> 1.2 相关文件</h3><p><code>/etc/passwd</code> 文件中存储了所有用户信息。</p><figure><img src="`+o+`" alt="image-20240131161104043" tabindex="0" loading="lazy"><figcaption>image-20240131161104043</figcaption></figure><p>该文件每一行是一个用户信息，并且以<code>:</code> 为分隔符，一共7 段内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>root:x:0:0:root:/root:/bin/bash
[--] - - - [--] [---] [--------]
 |   | | |   |    |        |
 |   | | |   |    |        +-&gt; 7. Login shell
 |   | | |   |     +---------&gt; 6. Home directory
 |   | | |   +---------------&gt; 5. GECOS
 |   | | +-------------------&gt; 4. GID
 |   | +---------------------&gt; 3. UID
 |   +-----------------------&gt; 2. Password
 +---------------------------&gt; 1. Username
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>字段序号</th><th>示例</th><th>解释</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>root</td><td>用户名</td><td></td></tr><tr><td>2</td><td>x</td><td>密码占位符</td><td>用户的密码 x 代表有密码 无内容，用户登录系统无需密码</td></tr><tr><td>3</td><td>0</td><td>UID</td><td>当前用户的身份标识 0 就是超级管理员</td></tr><tr><td>4</td><td>0</td><td>GID</td><td>当前用户的基本组ID</td></tr><tr><td>5</td><td>root</td><td>用户的身份信息 大名</td><td>现已废弃</td></tr><tr><td>6</td><td>/root</td><td>用户家目录</td><td>超管：/root 普通用户：/home/用户名</td></tr><tr><td>7</td><td>/bin/bash</td><td>用户登录系统后 （默认）命令解释器</td><td>/sbin/nologin 不允许登录系统 /bin/sh</td></tr></tbody></table><hr><p><code>/etc/shadow</code> 记录了系统中用户的密码信息。</p><figure><img src="`+c+`" alt="image-20240131173738484" tabindex="0" loading="lazy"><figcaption>image-20240131173738484</figcaption></figure><p>该文件每一行记录一个用户的密码信息，并且以<code>:</code> 作为分隔符，一共9 段内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>root:$6$T07ge8Py$.tZXOZIOpWq2sGZKEkKn2KMahL.mcyNrQrd3C3PIqNt8kA0p/K3JtG4Dwn4vyU2kSvyEg1K2xArTs61AG1Qo1/:18766:0:99999:7:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>字段序号</th><th>示例</th><th>含义</th><th>说明</th><th>可登录</th></tr></thead><tbody><tr><td>1</td><td>root</td><td>用户名</td><td></td><td></td></tr><tr><td>2</td><td>$6$T07ge8</td><td>密码密文</td><td>sha-512 HASH 散列算法 salt 值 加密后的密文</td><td></td></tr><tr><td>3</td><td>18766</td><td>密码修改时间</td><td>距离1970 年1 月1 日 密码最近一次的修改时间（天）</td><td></td></tr><tr><td>4</td><td>0</td><td>密码最短有效期</td><td>在最短有效期之内不能修改密码 3：三天之内不可以修改自己的密码 root 用户不受此限制</td><td></td></tr><tr><td>5</td><td>99999</td><td>密码最长有效期</td><td>密码可以使用多长时间 建议设置成90 天</td><td></td></tr><tr><td>6</td><td>7</td><td>密码过期时间</td><td>密码过期前7 天会有警告提示</td><td></td></tr><tr><td>7</td><td></td><td>密码的不活跃期</td><td>过了密码有效期没有修改密码， 处于不活跃期，仍然可以登录系统。</td><td></td></tr><tr><td>8</td><td></td><td>账户失效时间</td><td>密码距离1970 年1 月1 日的失效时间（天）</td><td></td></tr><tr><td>9</td><td></td><td>未分配功能</td><td></td><td></td></tr></tbody></table><p>密码密文结构</p><p>密码密文：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$6$T07ge8Py$.tZXOZIOpWq2sGZKEkKn2KMahL.mcyNrQrd3C3PIqNt8kA0p/K3JtG4Dwn4vyU2kSvyEg1K2xArTs61AG1Qo1/

$id$salt$encrypted

$加密方式$盐值（随机的）$密码密文
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行命令<code>man crypt</code>可以看到加密方式分别为什么</p><figure><img src="`+u+'" alt="image-20240131174339576" tabindex="0" loading="lazy"><figcaption>image-20240131174339576</figcaption></figure><p>攻击者可能会先获取这个密文，然后爆破出服务器密码。</p><hr><p><code>/etc/group</code> 保存了组信息。</p><figure><img src="'+h+`" alt="image-20240131175420177" tabindex="0" loading="lazy"><figcaption>image-20240131175420177</figcaption></figure><p>该文件的每一行记录了每一个组的信息，并且以<code>:</code> 作为分隔符，一共4 段内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>abcd:x:1000:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>字段数</th><th>示例</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>abcd</td><td>组名</td><td>用户组的名称，由字母或数字构成。</td></tr><tr><td>2</td><td>x</td><td>密码</td><td>x 是密码标识， 组密码默认保存在 /etc/gshadow 文件中。</td></tr><tr><td>3</td><td>1000</td><td>GID</td><td>Group ID</td></tr><tr><td>4</td><td>abcd</td><td>群组用户</td><td></td></tr></tbody></table><h2 id="_2-linux中的权限" tabindex="-1"><a class="header-anchor" href="#_2-linux中的权限" aria-hidden="true">#</a> 2. Linux中的权限</h2><h3 id="_2-1-权限分类" tabindex="-1"><a class="header-anchor" href="#_2-1-权限分类" aria-hidden="true">#</a> 2.1 权限分类</h3><p>在Linux中，权限被分为三个类型：读、写和执行。通过<code>ls -lh</code> 命令查看文件或目录的权限。</p><p><code>ls -lh</code> 命令结果中，每一行以空格为分隔符分为9 个字段（列）。</p><table><thead><tr><th>字段数</th><th>例子</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>drwxr-xr-x.</td><td>文件或目录权限</td></tr><tr><td>2</td><td>2</td><td>如果文件类型是文件，表示文件的节点数 如果文件类型是目录，表示子目录的个数</td></tr><tr><td>3</td><td>root</td><td>所有者的名字</td></tr><tr><td>4</td><td>root</td><td>所有组的名字</td></tr><tr><td>5</td><td>137</td><td>文件大小 注意：不是目录的大小。</td></tr><tr><td>6 7 8</td><td>Feb 23 10:25</td><td>文件最后一次修改时间</td></tr><tr><td>9</td><td>Desktop</td><td>文件或者目录的名字</td></tr></tbody></table><p>第一个字段中，文件或目录权限分为5 个字段（列）。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>d rwx r-x r-x .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>字段数</th><th>示例</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>d</td><td>文件类型</td><td>- 文件 d 目录 l 符号链接 c 字符型设备 b 块设备</td></tr><tr><td>2</td><td>rwx</td><td>所有者权限</td><td>u 所有者</td></tr><tr><td>3</td><td>r-x</td><td>所属组的权限</td><td>g 所属组</td></tr><tr><td>4</td><td>r-x</td><td>其他用户的权限</td><td>o 其他用户</td></tr><tr><td>5</td><td>.</td><td></td><td></td></tr></tbody></table><p>权限表达方式说明：</p><table><thead><tr><th>权限</th><th>文件</th><th>目录</th></tr></thead><tbody><tr><td>r</td><td>读取文件内容</td><td>列出目录内容</td></tr><tr><td>w</td><td>修改文件内容</td><td>创建、删除目录中的文件</td></tr><tr><td>x</td><td>执行程序或脚本</td><td>可以进入该目录</td></tr></tbody></table><h3 id="_2-2-八进制赋权法" tabindex="-1"><a class="header-anchor" href="#_2-2-八进制赋权法" aria-hidden="true">#</a> 2.2 八进制赋权法</h3><p>八进制赋权法，即用八进制数表达文件或者目录的权限，这种表达方式精炼方便。</p><ul><li>给读权限赋值为4，即<code>r = 4</code>；</li><li>写权限赋值为2，即<code>w = 2</code>；</li><li>执行权限赋值为1，即<code>x = 1</code>。</li></ul><table><thead><tr><th>权限位</th><th>2 进制</th><th>8 进制</th></tr></thead><tbody><tr><td>---</td><td>000</td><td>0</td></tr><tr><td>--x</td><td>001</td><td>1</td></tr><tr><td>-w-</td><td>010</td><td>2</td></tr><tr><td>-wx</td><td>011</td><td>3</td></tr><tr><td>r--</td><td>100</td><td>4</td></tr><tr><td>r-x</td><td>101</td><td>5</td></tr><tr><td>rw-</td><td>110</td><td>6</td></tr><tr><td>rwx</td><td>111</td><td>7</td></tr></tbody></table><p>常见权限：</p><ul><li>777，最高权限；</li><li>755，可执行文件；</li><li>644，文档文件。</li></ul><h3 id="_2-3-权限修改" tabindex="-1"><a class="header-anchor" href="#_2-3-权限修改" aria-hidden="true">#</a> 2.3 权限修改</h3><ul><li>对文件或目录进行权限设置，一定程度上保证安全性。</li><li>只有文件或者目录的所有者才能赋权，root 除外。</li><li>一般情况下，通过chmod 命令进行权限修改或调整。</li></ul><p>chmod 命令有固定的使用格式，如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chmod 对象 运算符号 权限 文件或者目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chmod u+w ./aaa.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>权限运算说明：</p><table><thead><tr><th>对象</th><th>运算符号</th><th>权限</th></tr></thead><tbody><tr><td>u g o a<br>u 所有者、g 所属组、o 其他、a all</td><td>+ - =<br>+ 增加权限、- 取消权限、= 唯一设定权限</td><td>r w x t s<br>t和s权限在后面</td></tr></tbody></table><p>可以通过chown 命令，修改文件所有者，命令格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chown 修改后的所属者 目标文件或者目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用命令选项：</p><ul><li>-R，递归修改</li></ul><h3 id="_2-4-特殊权限" tabindex="-1"><a class="header-anchor" href="#_2-4-特殊权限" aria-hidden="true">#</a> 2.4 特殊权限</h3><figure><img src="`+p+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>粘滞位对目录有效</strong></p><ul><li>用字符表示：t</li><li>用八进制表示：1000</li></ul><p><code>/tmp</code>目录就是使用了粘滞位t，其作用是，在该目录下创建文件或目录后，仅允许其作者（所有者）进行删除操作。其他用户无法删除。</p><figure><img src="'+b+`" alt="image-20240206170415976" tabindex="0" loading="lazy"><figcaption>image-20240206170415976</figcaption></figure><p><strong>特殊权限位SUID，对可执行文件有效</strong></p><ul><li>用字符表示：s</li><li>用八进制表示：4000</li></ul><p>Setuid最常用的是配合执行权限x使用，例如，系统中内置命令passwd，它默认是带有s权限位，passwd命令的主要功能是修改用户的密码，而修改密码的流程是：</p><ol><li>将加密后的哈希值写入到<code>/etc/passwd</code>文件对应的用户条目中。</li><li>使用pwconv工具转换到<code>/etc/shadow</code>文件中。</li><li>而普通用户是没有权限修改<code>/etc/passwd</code> 和 <code>/etc/shadow</code>文件</li></ol><p>在普通用户尝试执行passwd，该passwd的所有者是root并且设置了Suid，因此passwd以root身份执行。</p><p><strong>特殊权限位SGID，对目录有效</strong></p><ul><li>用字符表示：s</li><li>用八进制表示：2000</li></ul><p>当一个目录拥有sgid权限时，其他用户在该目录下创建文件或目录后，它会继承目录的id，即创建的文件或目录的属组为父目录的属组。</p><p><strong>注意</strong></p><ul><li>root 无视权限标识。</li><li>目录的权限中的添加、删除、列出目录内容有进入权限的前提才可以。</li><li>权限从左向右匹配。</li></ul><h2 id="_3-sudo-权限控制" tabindex="-1"><a class="header-anchor" href="#_3-sudo-权限控制" aria-hidden="true">#</a> 3. sudo 权限控制</h2><p><strong>sudo的作用</strong></p><p>Linux 是多用户多任务的分时操作系统，共享该系统的用户往往不只一个。考虑到root 账户密码的敏感性和root 账号的无限制权限，有必要采取如下措施：</p><ul><li>通过useradd 创建一些普通用户，只让他们拥有不完全的权限。</li><li>在必须使用root 用户执行命令的情况下，需要申请root 权限。</li></ul><h3 id="sudoers" tabindex="-1"><a class="header-anchor" href="#sudoers" aria-hidden="true">#</a> sudoers</h3><p>一般情况下，使用sudo 都是在申请root 用户身份特权执行某一个命令，要求输入密码时，输入的是当前用户密码。</p><p>具体某一个用户可以以哪一个用户身份执行某一个命令，是需要配置的。</p><p>配置文件<code>/etc/sudoers </code>是<code>sudo</code>命令的配置文件。</p><p>典型配置文件格式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@localhost ~]# grep -n &quot;^root&quot; /etc/sudoers
92:root ALL=(ALL)   ALL
[root@localhost ~]#
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件sudoers 关于权限的配置，大概分为5 个字段，具体含义如下：</p><table><thead><tr><th>示例</th><th>字段</th><th>含义</th></tr></thead><tbody><tr><td>root</td><td>1</td><td>授权用户| 组</td></tr><tr><td>ALL</td><td>2</td><td>主机</td></tr><tr><td>(ALL:ALL)</td><td>3</td><td>用户:组 授权用户可以以此用户身份特权执行命令。</td></tr><tr><td>NOPASSWD:</td><td>4</td><td>是否需要输入密码验证</td></tr><tr><td>ALL</td><td>5</td><td>命令1，命令2，...</td></tr></tbody></table><p>配置示例，用户ajest 可以以登录在任何地址的任何用户身份特权执行whoami 和id 命令，并且没有密码保护。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@localhost ~]# grep -n &quot;^abcd&quot; /etc/sudoers
1:abcd ALL=(ALL:ALL) NOPASSWD: /usr/bin/whoami, /usr/bin/id
[root@localhost ~]#
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入sudo -l可以看到</p><h3 id="cve-2019-14287" tabindex="-1"><a class="header-anchor" href="#cve-2019-14287" aria-hidden="true">#</a> CVE-2019-14287</h3><p>版本号 &lt; 1.8.28的Sudo版本均将受到该漏洞的影响。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-V</span>
Sudo version <span class="token number">1.8</span>.23
Sudoers policy plugin version <span class="token number">1.8</span>.23
Sudoers <span class="token function">file</span> grammar version <span class="token number">46</span>
Sudoers I/O plugin version <span class="token number">1.8</span>.23
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置如果为这样</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[abcd@localhost tmp]$ sudo -l

User abcd may run the following commands on localhost:
    (ALL, !root) /usr/bin/id

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[abcd@localhost tmp]$ sudo -u#0 id
uid=0(root) gid=0(root) groups=0(root),980(wireshark)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,100);function _(f,y){const e=i("ExternalLinkIcon");return r(),s("div",null,[v,t("blockquote",null,[t("p",null,[d("["),t("a",m,[d("Linux 安全运维] 第三章 Linux 用户以及权限管理 - 知乎 (zhihu.com)"),n(e)])])]),x])}const D=a(g,[["render",_],["__file","1_Linux.html.vue"]]);export{D as default};
