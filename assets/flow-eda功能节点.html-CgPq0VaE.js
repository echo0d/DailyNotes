import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as l,b as r,d as t,e as o,r as d,o as u}from"./app-vU8izl1I.js";const p={},a={id:"节点输入-输出",tabindex:"-1"},g={class:"header-anchor",href:"#节点输入-输出"},b={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e8%8a%82%e7%82%b9%e8%be%93%e5%85%a5%e8%be%93%e5%87%ba",target:"_blank",rel:"noopener noreferrer"},f={id:"节点性质类型",tabindex:"-1"},m={class:"header-anchor",href:"#节点性质类型"},h={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e8%8a%82%e7%82%b9%e6%80%a7%e8%b4%a8%e7%b1%bb%e5%9e%8b",target:"_blank",rel:"noopener noreferrer"},k={id:"开始节点",tabindex:"-1"},T={class:"header-anchor",href:"#开始节点"},q={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%bc%80%e5%a7%8b%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},w={id:"定时器节点",tabindex:"-1"},x={class:"header-anchor",href:"#定时器节点"},S={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%ae%9a%e6%97%b6%e5%99%a8%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},M={id:"延时器节点",tabindex:"-1"},P={class:"header-anchor",href:"#延时器节点"},v={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%bb%b6%e6%97%b6%e5%99%a8%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},y={id:"输出节点",tabindex:"-1"},L={class:"header-anchor",href:"#输出节点"},Q={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e8%be%93%e5%87%ba%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},H={id:"条件节点",tabindex:"-1"},D={class:"header-anchor",href:"#条件节点"},W={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e6%9d%a1%e4%bb%b6%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},R={id:"序列节点",tabindex:"-1"},E={class:"header-anchor",href:"#序列节点"},j={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%ba%8f%e5%88%97%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},B={id:"拼接节点",tabindex:"-1"},C={class:"header-anchor",href:"#拼接节点"},N={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e6%8b%bc%e6%8e%a5%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},I={id:"分割节点",tabindex:"-1"},O={class:"header-anchor",href:"#分割节点"},J={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%88%86%e5%89%b2%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},U={id:"阀门节点",tabindex:"-1"},A={class:"header-anchor",href:"#阀门节点"},V={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e9%98%80%e9%97%a8%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},X={id:"json-解析节点",tabindex:"-1"},z={class:"header-anchor",href:"#json-解析节点"},G={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=json-%e8%a7%a3%e6%9e%90%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},Z={id:"html-解析节点",tabindex:"-1"},F={class:"header-anchor",href:"#html-解析节点"},$={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=html-%e8%a7%a3%e6%9e%90%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},K={id:"xml-解析节点",tabindex:"-1"},Y={class:"header-anchor",href:"#xml-解析节点"},_={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=xml-%e8%a7%a3%e6%9e%90%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},c={id:"http-请求节点",tabindex:"-1"},ll={class:"header-anchor",href:"#http-请求节点"},el={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=http-%e8%af%b7%e6%b1%82%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},tl={id:"http-接收节点",tabindex:"-1"},nl={class:"header-anchor",href:"#http-接收节点"},ol={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=http-%e6%8e%a5%e6%94%b6%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},rl={id:"http-响应节点",tabindex:"-1"},il={class:"header-anchor",href:"#http-响应节点"},sl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=http-%e5%93%8d%e5%ba%94%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},dl={id:"ws-服务端节点",tabindex:"-1"},ul={class:"header-anchor",href:"#ws-服务端节点"},pl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=ws-%e6%9c%8d%e5%8a%a1%e7%ab%af%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},al={id:"ws-客户端节点",tabindex:"-1"},gl={class:"header-anchor",href:"#ws-客户端节点"},bl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=ws-%e5%ae%a2%e6%88%b7%e7%ab%af%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},fl={id:"mqtt-订阅节点",tabindex:"-1"},ml={class:"header-anchor",href:"#mqtt-订阅节点"},hl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=mqtt-%e8%ae%a2%e9%98%85%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},kl={id:"mqtt-发布节点",tabindex:"-1"},Tl={class:"header-anchor",href:"#mqtt-发布节点"},ql={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=mqtt-%e5%8f%91%e5%b8%83%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},wl={id:"email-节点",tabindex:"-1"},xl={class:"header-anchor",href:"#email-节点"},Sl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=email-%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},Ml={id:"mysql-节点",tabindex:"-1"},Pl={class:"header-anchor",href:"#mysql-节点"},vl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=mysql-%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},yl={id:"mongodb-节点",tabindex:"-1"},Ll={class:"header-anchor",href:"#mongodb-节点"},Ql={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=mongodb-%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},Hl={href:"https://www.mongodb.com/docs/manual/reference/command/",target:"_blank",rel:"noopener noreferrer"},Dl={id:"redis-节点",tabindex:"-1"},Wl={class:"header-anchor",href:"#redis-节点"},Rl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=redis-%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},El={id:"postgresql-节点",tabindex:"-1"},jl={class:"header-anchor",href:"#postgresql-节点"},Bl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=postgresql-%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},Cl={id:"子流程节点",tabindex:"-1"},Nl={class:"header-anchor",href:"#子流程节点"},Il={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%ad%90%e6%b5%81%e7%a8%8b%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},Ol={id:"子输入节点",tabindex:"-1"},Jl={class:"header-anchor",href:"#子输入节点"},Ul={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%ad%90%e8%be%93%e5%85%a5%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"},Al={id:"子输出节点",tabindex:"-1"},Vl={class:"header-anchor",href:"#子输出节点"},Xl={href:"http://106.54.46.47:91/#/getting-started/flow-node?id=%e5%ad%90%e8%be%93%e5%87%ba%e8%8a%82%e7%82%b9",target:"_blank",rel:"noopener noreferrer"};function zl(Gl,e){const n=d("ExternalLinkIcon");return u(),s("div",null,[e[34]||(e[34]=l("p",null,"在绘图区域的左侧有一条含有很多节点的列表，我们把这些节点称之为“功能节点”。",-1)),e[35]||(e[35]=l("p",null,"功能节点会随着项目的不断迭代开发而扩展变化，根据其功能特点分为不同的节点类型，在节点列表区域可以展开和折叠同类型的节点。",-1)),l("h3",a,[l("a",g,[l("span",null,[l("a",b,[e[0]||(e[0]=t("节点输入/输出",-1)),o(n)])])])]),e[36]||(e[36]=l("p",null,"每个节点都有一个输入参数和一个输出参数，节点每次运行时，都是从输入参数中获取数据，进行特殊逻辑处理后，将结果设置到输出参数中。",-1)),e[37]||(e[37]=l("ul",null,[l("li",null,"输入：若某个节点没有上游节点，则它的输入参数为该节点自己的属性参数；若该节点有上游节点，则它的输入参数为上游节点的输出参数加上它自己的节点属性参数。"),l("li",null,"输出：当前节点的输出参数是根据输入参数进行逻辑处理后的结果。")],-1)),e[38]||(e[38]=l("blockquote",null,[l("p",null,"节点的输入输出参数统一为 json 格式的数据，在运行日志中体现为 input 和 output 字段。")],-1)),l("h3",f,[l("a",m,[l("span",null,[l("a",h,[e[1]||(e[1]=t("节点性质类型",-1)),o(n)])])])]),e[39]||(e[39]=l("p",null,"所有的功能节点，根据节点的运行特性分为以下几大类：",-1)),e[40]||(e[40]=l("ul",null,[l("li",null,"起始节点：在一个流程中，起始节点是标志流程开始的节点，整个流程是从起始节点开始执行的。例如开始、定时器等节点就是起始节点。"),l("li",null,"普通节点：泛指没有特殊性质的节点，这类节点往往功能简单，由上游节点触发执行，执行完成该节点就运行结束了。例如数据库类的节点。"),l("li",null,"输出节点：当运行流程时需要查看运行结果或者输出参数，就需要有输出节点来专门负责查看输出内容。目前仅有[输出]节点有此功能。"),l("li",null,"阻塞节点：当流程正常运行时，有些节点无法立即运行完成，需要一直处于运行中状态等待，这类节点为阻塞节点，会阻塞当前流程继续向下运行。例如 WS 服务端等节点。")],-1)),e[41]||(e[41]=l("p",null,"阻塞节点一般在流程运行时会一直处于运行中状态，阻塞整个流程继续向下运行，往往无法自行停止或切换运行状态，这是由于其功能的特殊性需要一直处于监听状态导致的。 除定时器、延时器等有终止条件的节点外，其他阻塞节点都是无法自行停止的。",-1)),e[42]||(e[42]=l("blockquote",null,[l("p",null,"当用户想要主动停止阻塞节点时，可以点击工具栏的停止按钮来中止流程。")],-1)),e[43]||(e[43]=l("p",null,"下面我们将对功能节点进行一一介绍。",-1)),l("h3",k,[l("a",T,[l("span",null,[l("a",q,[e[2]||(e[2]=t("开始节点",-1)),o(n)])])])]),e[44]||(e[44]=l("p",null,"开始节点是触发流程执行的起始节点，一个流程图中不限制开始节点的数量。 运行流程时，当前流程中所有的开始节点会同时运行，每个开始节点仅会运行一次。",-1)),e[45]||(e[45]=l("p",null,[l("strong",null,"节点参数："),t(" 无")],-1)),l("h3",w,[l("a",x,[l("span",null,[l("a",S,[e[3]||(e[3]=t("定时器节点",-1)),o(n)])])])]),e[46]||(e[46]=l("p",null,"定时器节点可作为起始节点，用于定时触发流程周期性执行，支持周期触发和 cron 表达式，可指定执行次数，可输出指定格式的时间戳； 亦可作为非起始节点，由上游节点触发执行。",-1)),e[47]||(e[47]=l("blockquote",null,[l("p",null,"定时器节点作为起始节点时，在流程开始运行时会立即执行一次。")],-1)),e[48]||(e[48]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[49]||(e[49]=l("ul",null,[l("li",null,"执行周期*：指每次触发执行的时间间隔，采用填写数值+选择单位的方式，可以让用户灵活的填写执行周期。支持 cron 表达式"),l("li",null,"执行次数*：指定时触发的总执行次数，0 表示不限制次数，永久执行。"),l("li",null,[t("输出时间：用户可以选择输出时间的格式，不选择则不输出时间。选定格式后，本节点每次运行时都会输出对应格式的时间值，字段名为"),l("code",null,"timestamp"),t("。")])],-1)),l("h3",M,[l("a",P,[l("span",null,[l("a",v,[e[4]||(e[4]=t("延时器节点",-1)),o(n)])])])]),e[50]||(e[50]=l("p",null,"延时器节点用于延迟执行，可设定延迟时间，等待延迟时间过后再触发下游节点执行。",-1)),e[51]||(e[51]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[52]||(e[52]=l("ul",null,[l("li",null,"延迟时间*：指需要延迟多长时间，采用填写数值+选择单位的方式，用户可以灵活指定延迟时间。")],-1)),l("h3",y,[l("a",L,[l("span",null,[l("a",Q,[e[5]||(e[5]=t("输出节点",-1)),o(n)])])])]),e[53]||(e[53]=l("p",null,"输出节点主要用于展示输出内容，当其上游节点运行完成后，节点的输出参数就会传递至输出节点，再由输出节点进行实时展示。 方便用户实时查看各个节点的输出参数内容。输出节点由上游节点触发执行，触发后立即执行完成，展示最新的输出信息，会覆盖之前的输出信息。",-1)),e[54]||(e[54]=l("blockquote",null,[l("p",null,"输出节点可将上游节点的输出信息完整地传递至下游节点。")],-1)),e[55]||(e[55]=l("p",null,[l("strong",null,"节点参数："),t(" 无")],-1)),l("h3",H,[l("a",D,[l("span",null,[l("a",W,[e[6]||(e[6]=t("条件节点",-1)),o(n)])])])]),e[56]||(e[56]=l("p",null,"条件节点主要用于判断条件是否满足，用户可根据上游节点的参数值进行判断，条件满足后才会继续向下游节点执行输出，若条件不满足则不继续执行， 可使用多个条件节点组成与或等逻辑通路。",-1)),e[57]||(e[57]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[58]||(e[58]=l("ul",null,[l("li",null,"字段名*：指从上游节点的输出参数中取哪个字段进行判断，此处填写字段名，若输出参数有多层结构，可使用 a.b.c 的格式获取，仅支持填写单个字段名，不支持多个字段。"),l("li",null,"判断逻辑*：指需要对目标字段做什么判断，等于或不等于、大于小于之类的各种判断逻辑可供用户选择。"),l("li",null,"判断值*：指期望目标字段在对应逻辑下的值，和逻辑判断组合使用，例如=xxx、>1 等等。支持填写 null，表示目标字段不存在（存在）或者值为（不为） NULL。")],-1)),l("h3",R,[l("a",E,[l("span",null,[l("a",j,[e[7]||(e[7]=t("序列节点",-1)),o(n)])])])]),e[59]||(e[59]=l("p",null,"序列节点主要用于输出整数序列，可自定义序列的间隔大小和数字范围，可选择步进方式为递增或递减，该节点会依次输出整数序列。",-1)),e[60]||(e[60]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[61]||(e[61]=l("ul",null,[l("li",null,"初始值*：指生成序列的初始值，即序列的起点，只能为整数，生成的序列包含此值。"),l("li",null,"结束值*：指生成序列的结束值，即序列的终点，只能为整数，生成的序列包含此值。"),l("li",null,"递进方式：指序列递进的方式，可选择递增或递减，默认为递增。"),l("li",null,"递进间隔：指序列递进的数字间隔大小，只能输入大于 0 的整数，默认值为 1。")],-1)),l("h3",B,[l("a",C,[l("span",null,[l("a",N,[e[8]||(e[8]=t("拼接节点",-1)),o(n)])])])]),e[62]||(e[62]=l("p",null,[t("拼接节点主要用于拼接多个分散的值，可以在一定时间内多次持续地接收上游节点的输出参数，对用户指定字段的值进行拼接，默认使用英文逗号分隔拼接的值。 接收值并拼接完成后，会向下游节点输出一个"),l("code",null,"result"),t("字段，其值就是拼接后的值。")],-1)),e[63]||(e[63]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[64]||(e[64]=l("ul",null,[l("li",null,"字段名*：指从上游节点的输出参数中取哪个字段进行取值，此处填写字段名，若输出参数有多层结构，可使用 a.b.c 的格式获取，仅支持填写单个字段名，不支持多个字段。"),l("li",null,"是否过滤空值：指拼接值的时候，若某次接收到的值为空，用户可以选择是否将其过滤掉，默认过滤空值。")],-1)),e[65]||(e[65]=l("blockquote",null,[l("p",null,"拼接节点接收上游节点的输出参数，超过 200ms 未继续收到输出则会结束接收。")],-1)),l("h3",I,[l("a",O,[l("span",null,[l("a",J,[e[9]||(e[9]=t("分割节点",-1)),o(n)])])])]),e[66]||(e[66]=l("p",null,[t("分割节点主要用于分割指定的字段或列表，从上游节点的输出参数中取一个字段进行分割，当指定字段是一个列表时，会将列表分割开； 当指定字段的值是一个字符串时，可以根据用户自定义的分割符进行分割，分割结束后输出分割结果，输出字段名为"),l("code",null,"result"),t("。")],-1)),e[67]||(e[67]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[68]||(e[68]=l("ul",null,[l("li",null,"字段名*：指从上游节点的输出参数中取哪个字段进行取值，此处填写字段名，若输出参数有多层结构，可使用 a.b.c 的格式获取，仅支持填写单个字段名，不支持多个字段。"),l("li",null,"分割符：指用来分割指定字段值的分割符，当指定字段值类型为字符串时才生效，默认分割符为英文逗号。"),l("li",null,"输出方式：用户可以指定输出方式，可以连续输出多次，每次输出单个元素值；也可以仅输出一次，输出值为一个数组。默认单次输出数组。")],-1)),l("h3",U,[l("a",A,[l("span",null,[l("a",V,[e[10]||(e[10]=t("阀门节点",-1)),o(n)])])])]),e[69]||(e[69]=l("p",null,"阀门节点，可用于多条支路汇总时，限制某一段时间周期内，通过此节点的次数。默认100毫秒内仅允许通过一次。 当用户需要在多条支路汇总时，例如多个条件任满足其一，便可使用此节点，限制流程运行次数。",-1)),e[70]||(e[70]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[71]||(e[71]=l("ul",null,[l("li",null,"执行次数：在指定周期时间范围内，限制流程允许通过此节点的总执行次数，默认1次。"),l("li",null,"限制周期（单位：ms）：用户可以指定时间周期，用于在此周期内允许流程通过的次数计算，默认100ms。")],-1)),l("h3",X,[l("a",z,[l("span",null,[l("a",G,[e[11]||(e[11]=t("JSON 解析节点",-1)),o(n)])])])]),e[72]||(e[72]=l("p",null,"JSON 解析节点主要用于解析上游节点的输出参数，根据用户填写的字段名，获取用户需要的参数值。解析完成后输出，输出的字段名为要解析的字段名。",-1)),e[73]||(e[73]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[74]||(e[74]=l("ul",null,[l("li",null,"解析参数*：指从上游节点的输出参数中获取哪些字段进行取值解析，此处填写字段名，若输出参数有多层结构，可使用 a.b.c 的格式获取，支持多个字段同时取值，多个字段之间使用英文逗号隔开。")],-1)),e[75]||(e[75]=l("blockquote",null,[l("p",null,[t("JSON 解析节点若要解析它上个节点的自定义参数，则字段名需要加上前缀"),l("code",null,"params."),t("。")])],-1)),l("h3",Z,[l("a",F,[l("span",null,[l("a",$,[e[12]||(e[12]=t("HTML 解析节点",-1)),o(n)])])])]),e[76]||(e[76]=l("p",null,"HTML 解析节点主要用于解析 html 格式的文本内容，可指定 css 选择器解析出目标元素，解析完成后，用户可选择输出 html 内容或文本内容。",-1)),e[77]||(e[77]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[78]||(e[78]=l("ul",null,[l("li",null,"解析参数（html 来源）*：指从上游节点的输出参数中获取哪个字段进行解析，此处填写字段名，该字段的值需要是 html 格式的字符串。若输出参数有多层结构，可使用 a.b.c 的格式获取。"),l("li",null,"CSS 选择器*：指从 html 中进行解析过滤的 css 选择器，用户可选择某一种选择器，并填写对应的值。"),l("li",null,"二次过滤标签：指用户在经过 CSS 选择器过滤后的内容仍需要进行二次过滤时，用户可填写 html 的标签名，来对过滤后的 html 内容进行二次过滤。"),l("li",null,"输出内容（默认输出文本内容）：用户可选择输出方式，输出文本内容/输出 html 内容，默认输出文本内容。")],-1)),e[79]||(e[79]=l("blockquote",null,[l("p",null,"HTML 解析节点可以解析 HTTP 请求返回的 html 格式的内容。")],-1)),l("h3",K,[l("a",Y,[l("span",null,[l("a",_,[e[13]||(e[13]=t("XML 解析节点",-1)),o(n)])])])]),e[80]||(e[80]=l("p",null,"XML 解析节点主要用于解析 xml 格式的文本内容，解析完成后，可转化为 json 格式的参数信息输出。",-1)),e[81]||(e[81]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[82]||(e[82]=l("ul",null,[l("li",null,"解析参数（xml 来源）*：指从上游节点的输出参数中获取哪个字段进行解析，此处填写字段名，该字段的值需要是 xml 格式的字符串。若输出参数有多层结构，可使用 a.b.c 的格式获取。"),l("li",null,"标签属性名称：若待解析的 xml 内容中标签内含有属性，则解析后的 json 格式内容中，展示属性名称的字段名的定义。标签属性的字段名默认为@attributes。")],-1)),e[83]||(e[83]=l("blockquote",null,[l("p",null,"XML 解析节点可以解析 HTTP 请求返回的 xml 格式的内容。")],-1)),l("h3",c,[l("a",ll,[l("span",null,[l("a",el,[e[14]||(e[14]=t("HTTP 请求节点",-1)),o(n)])])])]),e[84]||(e[84]=r("<p>可以发送 HTTP 请求，支持各种请求类型，支持自定义请求参数、请求体、请求头等内容。用户可以使用此节点来发送请求以获得请求响应数据，输出结果的字段名为<code>httpResult</code>。本节点可支持发送响应结果为 json、html、xml 格式的请求。</p><p><strong>节点参数：</strong></p><ul><li>URL*：指要发送的请求 url 完整地址，通常以 http/https 开头；若当前要请求的接口是本项目平台创建的 HTTP 服务，则不需要填写域名，直接填写 url 路径即可。</li><li>请求方式*：指要发送请求的请求方式，例如 GET、POST 等，提供了几乎所有的请求方式可供用户选择。</li><li>请求参数：指请求 url 后面跟的请求参数，例如 id=xx 等，多个请求参数之间使用<code>&amp;</code>连接。</li><li>请求体：指发送请求的请求内容，长度不限，要求为 json 格式。</li><li>请求头：指发送请求的请求头参数，用户可以通过填写请求头来实现携带 token 等认证信息。默认<code>content-type: application/json</code>，用户可根据需求进行填写。</li></ul><blockquote><p>本节点的响应结果为 html 格式时，输出参数的 key 为<code>httpResult.html</code>。响应结果为 xml 格式时，输出参数的 key 为<code>httpResult.xml</code>。</p></blockquote>",4)),l("h3",tl,[l("a",nl,[l("span",null,[l("a",ol,[e[15]||(e[15]=t("HTTP 接收节点",-1)),o(n)])])])]),e[85]||(e[85]=l("p",null,"可以创建一个 HTTP 接口服务，用于接收 HTTP 请求。本节点为阻塞节点，节点运行后会在后台一直监听用户定义的请求。接收到对应的请求后，会获取请求参数和请求内容，解析后向下游输出。 便于处理用户自定义的业务逻辑，需要与[HTTP 响应]节点搭配使用，当处理完业务逻辑后，需要使用[HTTP 响应]节点来响应该请求，返回请求结果。",-1)),e[86]||(e[86]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[87]||(e[87]=l("ul",null,[l("li",null,"URL*：指要接收/监听的自定义请求 url 地址，此处不需要填写域名，直接填写 url 路径即可。"),l("li",null,"请求方式*：指要接收/监听的请求的请求方式，例如 GET、POST 等，提供了几乎所有的请求方式可供用户选择。")],-1)),e[88]||(e[88]=l("blockquote",null,[l("p",null,[t("本项目平台规定不需要鉴权的请求路径以"),l("code",null,"/api/http/"),t("开头。")])],-1)),l("h3",rl,[l("a",il,[l("span",null,[l("a",sl,[e[16]||(e[16]=t("HTTP 响应节点",-1)),o(n)])])])]),e[89]||(e[89]=l("p",null,"本节点主要用于响应 HTTP 请求，与[HTTP 接收]节点搭配使用，在收到请求、处理完业务逻辑后，本节点负责响应对应请求并返回数据。 用户可以自定义固定的响应内容，也可根据上游节点的输出结果来返回数据，响应请求。",-1)),e[90]||(e[90]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[91]||(e[91]=l("ul",null,[l("li",null,"URL*：指要响应的请求 url 地址，此处不需要填写域名，直接填写 url 路径即可。"),l("li",null,"请求方式*：指要响应的请求的请求方式，例如 GET、POST 等，提供了几乎所有的请求方式可供用户选择。"),l("li",null,"响应数据：指固定的请求响应内容，不填则默认的响应内容为其上游节点的输出参数。")],-1)),e[92]||(e[92]=l("blockquote",null,[l("p",null,"[HTTP 响应]节点需要与[HTTP 接收]节点搭配使用，填写的参数也应一致。")],-1)),l("h3",dl,[l("a",ul,[l("span",null,[l("a",pl,[e[17]||(e[17]=t("WS 服务端节点",-1)),o(n)])])])]),e[93]||(e[93]=r("<p>WebSocket 服务端节点，用户可自定义请求路径创建 WebSocket 服务，自定义发送消息内容和发送时机，可广播发送上游节点的输出参数，收到客户端消息后亦会向下游输出。 本节点为阻塞节点，运行后会一直监听 WebSocket 消息。本节点可多次运行，由上游节点触发，用户可选择在节点每次运行时，将上游节点的输出参数广播发送出去。</p><p><strong>节点参数：</strong></p><ul><li>路径*：指创建的 WebSocket 服务的 url 地址，此处不需要填写域名，直接填写 url 路径即可。</li><li>请求参数：指想要从接收到的 WebSocket 请求中获取到的参数名称，支持填写多个参数，以英文逗号分隔。</li><li>输出参数发送：指是否发送上游节点的输出参数，默认为不发送。若用户选择发送，则每次上游节点输出时，本节点都会进行 WebSocket 广播发送。</li><li>建立连接后发送：指每当有 WebSocket 客户端和本节点的服务端建立连接时，会向该客户端固定发送的消息内容，此处可使用占位符<code>${}</code>取请求参数中的字段值。</li><li>收到消息后发送：指每当收到来自 WebSocket 客户端的消息时，会向该客户端固定发送的消息内容。</li></ul><blockquote><p>本项目平台规定不需要鉴权的 WebSocket 请求路径以<code>/w/</code>开头。</p></blockquote>",4)),l("h3",al,[l("a",gl,[l("span",null,[l("a",bl,[e[18]||(e[18]=t("WS 客户端节点",-1)),o(n)])])])]),e[94]||(e[94]=l("p",null,[t("WebSocket 客户端节点，可以连接指定路径的 websocket 服务，自定义发送消息内容和发送时机，收到服务端消息后会立即向下游输出。 本节点为阻塞节点，运行后与 WebSocket 服务端建立连接后，会一直监听服务端的消息。收到服务端的消息后，会向下游输出消息内容，字段名为"),l("code",null,"message"),t("。")],-1)),e[95]||(e[95]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[96]||(e[96]=l("ul",null,[l("li",null,[t("路径*：指要连接的 WebSocket 服务的 url 地址，支持连接任何平台的 WebSocket 服务，通常以 ws/wss 开头。 若要连接本项目平台创建的 WebSocket 服务，则不需要填写域名，直接填写 url 路径即可。url 路径支持使用"),l("code",null,"?"),t("携带请求参数或 token 认证等。")]),l("li",null,"建立连接后发送：指当前客户端与 WebSocket 服务端建立连接成功时，会向该服务端固定发送的消息内容。")],-1)),l("h3",fl,[l("a",ml,[l("span",null,[l("a",hl,[e[19]||(e[19]=t("MQTT 订阅节点",-1)),o(n)])])])]),e[97]||(e[97]=r("<p>MQTT 订阅节点，可订阅指定 MQTT 服务的指定 topic，每当接收到消息后，会将消息内容向下游输出，输出字段名为<code>message</code>。 本节点为阻塞节点，同一节点仅可运行一次，运行后会一直监听指定 topic。</p><p><strong>节点参数：</strong></p><ul><li>Client ID*：指当前 MQTT 客户端的 Client-ID，同一平台环境下，客户端 ID 不允许重复。</li><li>服务器地址*：采用域名填写+端口选择的方式，用户可便捷地定义要连接的 MQTT 服务器地址。</li><li>Topic*：指用户需要订阅的 topic 主题，支持通配符。</li><li>用户名：连接到 MQTT 服务器所需要的认证身份信息，无需认证时则不用填写。</li><li>密码：连接到 MQTT 服务器所需要的认证身份信息，无需认证时则不用填写。</li></ul><blockquote><p>某个公网 MQTT 测试平台地址为<code>tcp://broker.emqx.io</code> <code>1883</code>可供测试学习使用。</p></blockquote>",4)),l("h3",kl,[l("a",Tl,[l("span",null,[l("a",ql,[e[20]||(e[20]=t("MQTT 发布节点",-1)),o(n)])])])]),e[98]||(e[98]=r("<p>MQTT 发布节点，可向指定 MQTT 服务的指定 topic 中发送自定义消息，发送出去的消息内容同时也会向下游节点输出，输出字段名为<code>message</code>。 本节点可多次重复运行，每次运行都会向指定 topic 中发送一次消息，消息发送完成后本节点就运行完成了。</p><p><strong>节点参数：</strong></p><ul><li>Client ID*：指当前 MQTT 客户端的 Client-ID，同一平台环境下，客户端 ID 不允许重复。</li><li>服务器地址*：采用域名填写+端口选择的方式，用户可便捷地定义要连接的 MQTT 服务器地址。</li><li>Topic*：指用户需要发送消息的 topic 主题，支持通配符。</li><li>发送消息*：指用户想要发送的消息内容，字符串格式，支持使用占位符<code>${}</code>从上游节点的输出参数中取值。</li><li>用户名：连接到 MQTT 服务器所需要的认证身份信息，无需认证时则不用填写。</li><li>密码：连接到 MQTT 服务器所需要的认证身份信息，无需认证时则不用填写。</li></ul><blockquote><p>多次重复运行同一个本节点，后台会复用同一个 MQTT 连接，直至流程结束时断开连接。</p></blockquote>",4)),l("h3",wl,[l("a",xl,[l("span",null,[l("a",Sl,[e[21]||(e[21]=t("Email 节点",-1)),o(n)])])])]),e[99]||(e[99]=r("<p>Email 节点可用于发送电子邮件，支持抄送、密送，支持各种邮件服务器，支持发送 html 格式的邮件。</p><p><strong>节点参数：</strong></p><ul><li>邮件服务器*：指要发送邮件的邮件服务器，这里我们默认使用 SMTP 服务。例如 qq 邮箱的邮件服务器为<code>smtp.qq.com</code>，网易邮箱的邮件服务器为<code>smtp.163.com</code>。</li><li>发件人邮箱*：指发件人的电子邮箱。</li><li>邮箱授权码*：指发件人的电子邮箱的邮箱授权码，可在邮箱里设置，找到 SMTP 服务，点击开启，获取授权码。具体如何获取可在网上自行搜索。</li><li>收件人邮箱*：指收件人的电子邮箱。支持多个收件人，多个邮箱之间使用英文,分隔。</li><li>邮件主题*：指要发送邮件的主题/标题。</li><li>邮件正文*：指要发送邮件的正文内容，支持普通文本和 html 格式（若要发送 html 格式内容，需要选择发送格式）。</li><li>发送格式（默认文本格式）：指发送邮件的正文内容的格式，可选择文本格式/HTML 格式，默认发送文本格式。</li><li>抄送邮箱：指要抄送的电子邮箱。支持多个，多个邮箱之间使用英文,分隔。</li><li>密送邮箱：指要密送的电子邮箱。支持多个，多个邮箱之间使用英文,分隔。</li></ul><blockquote><p>注意保护授权码的安全，为避免泄露，建议不要使用测试账号填写授权码，可在自己账号下新建测试流程。</p></blockquote>",4)),l("h3",Ml,[l("a",Pl,[l("span",null,[l("a",vl,[e[22]||(e[22]=t("Mysql 节点",-1)),o(n)])])])]),e[100]||(e[100]=l("p",null,"Mysql 节点可用于连接 mysql 数据库，采用 JDBC 驱动，可执行自定义 sql 语句，支持同时执行任意类型的多条 sql 语句，支持联表查询。 执行完成后，会输出每条 sql 语句的内容以及对应的执行结果。",-1)),e[101]||(e[101]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[102]||(e[102]=l("ul",null,[l("li",null,[t("URL 地址*：指要连接的 mysql 数据库地址，通常以"),l("code",null,"jdbc:mysql://"),t("开头。")]),l("li",null,"用户名*：指连接到 mysql 数据库所需要的认证信息，用户名。"),l("li",null,"密码*：指连接到 mysql 数据库所需要的认证信息，密码。"),l("li",null,"执行 SQL 语句*：指要执行的 sql 语句，支持任意类型的多条语句，以英文分号分隔。")],-1)),l("h3",yl,[l("a",Ll,[l("span",null,[l("a",Ql,[e[23]||(e[23]=t("MongoDB 节点",-1)),o(n)])])])]),e[103]||(e[103]=l("p",null,[t("MongoDB 节点，可连接至 MongoDB 数据库，执行自定义命令语句，输出执行结果和内容，输出字段名为"),l("code",null,"result"),t("。")],-1)),e[104]||(e[104]=l("p",null,[l("strong",null,"节点参数：")],-1)),l("ul",null,[e[27]||(e[27]=l("li",null,[t("URL 地址*：指要连接的 MongoDB 数据库的地址，通常以"),l("code",null,"mongodb://"),t("开头。")],-1)),e[28]||(e[28]=l("li",null,"数据库名称*：指要执行命令语句的数据库的名称。",-1)),l("li",null,[e[25]||(e[25]=t("执行语句*：指要执行的命令语句，要求为 json 格式，具体格式请参考 MongoDB",-1)),l("a",Hl,[e[24]||(e[24]=t("官方文档",-1)),o(n)]),e[26]||(e[26]=t("。",-1))])]),l("h3",Dl,[l("a",Wl,[l("span",null,[l("a",Rl,[e[29]||(e[29]=t("Redis 节点",-1)),o(n)])])])]),e[105]||(e[105]=r("<p>Redis 节点，可连接至 Redis 服务器，用户可以执行某些常用操作，例如设置值、查询值等等。本节点执行完成后，会将执行结果向下游输出，输出字段名为<code>result</code>。</p><p><strong>节点参数：</strong></p><ul><li>服务器地址*：指要连接的 Redis 服务器的地址。</li><li>操作*：指用户所需要进行的操作，此处提供了许多常用操作可供用户选择，例如 get、set、del 等，几乎可以满足用户的所有操作需求。</li><li>参数*：指要执行的操作对应的参数，选择的操作需要几个参数，此处就填写几个参数，多个参数之间使用英文逗号分隔。</li><li>用户名：连接到 Redis 服务器所需要的认证身份信息，无需认证时则不用填写。</li><li>密码：连接到 Redis 服务器所需要的认证身份信息，无需认证时则不用填写。</li><li>数据库：用户可指定切换 Redis 服务器的数据库，默认为 0，一般无特殊要求不会主动去切换数据库。</li></ul><blockquote><p>Redis 默认建立了 16 个数据库，db0 - db15，默认使用 db0，可手动切换。</p></blockquote>",4)),l("h3",El,[l("a",jl,[l("span",null,[l("a",Bl,[e[30]||(e[30]=t("PostgreSQL 节点",-1)),o(n)])])])]),e[106]||(e[106]=r("<p>PostgreSQL 节点可用于连接 PostgreSQL 数据库，采用 JDBC 驱动，可执行自定义 sql 语句，支持同时执行任意类型的多条 sql 语句，支持联表查询。 执行完成后，会输出每条 sql 语句的内容以及对应的执行结果。</p><p><strong>节点参数：</strong></p><ul><li>URL 地址*：指要连接的 PostgreSQL 数据库地址，通常以<code>jdbc:postgresql://</code>开头。</li><li>用户名*：指连接到 PostgreSQL 数据库所需要的认证信息，用户名。</li><li>密码*：指连接到 PostgreSQL 数据库所需要的认证信息，密码。</li><li>执行 SQL 语句*：指要执行的 sql 语句，支持任意类型的多条语句，以英文分号分隔。</li></ul><blockquote><p>PostgreSQL 节点和 Mysql 节点非常类似。</p></blockquote>",4)),l("h3",Cl,[l("a",Nl,[l("span",null,[l("a",Il,[e[31]||(e[31]=t("子流程节点",-1)),o(n)])])])]),e[107]||(e[107]=l("p",null,"在一个流程中，使用子流程节点，相当于在该位置嵌套了一个子流程。在子流程节点的属性栏中，可以选择其他流程作为子流程来执行。 当流程执行至子流程节点时，会触发对应的子流程开始执行，其效果和直接执行对应的子流程是一样的。 同时，执行本节点时，当前节点接收到的输入参数可传递至子流程中的[子输入]节点（若有）， 当子流程执行完毕后，可以通过子流程中的[子输出]节点（若有）将输出参数返回至本节点作为输出参数。 子流程执行完成后，本节点状态也会显示执行完成，继续向下执行。",-1)),e[108]||(e[108]=l("p",null,"使用子流程节点，会引入一个“子流程”的概念，其含义为， 将一个完整流程中的一部分流程提取出来，单独运行，将这段可以单独运行的部分流程成为“子流程”。 实际上，子流程和普通流程没有区别，仅仅是当子流程节点选择了哪个流程，则该流程就可以被成为子流程。",-1)),e[109]||(e[109]=l("p",null,[l("strong",null,"节点参数：")],-1)),e[110]||(e[110]=l("ul",null,[l("li",null,"选择子流程*：需要选择一个流程列表中的流程作为与之关联的子流程。")],-1)),e[111]||(e[111]=l("blockquote",null,[l("p",null,"子流程节点实现了嵌套流程的概念，从表象上来看，彷佛就是嵌套了一个子流程一样。")],-1)),l("h3",Ol,[l("a",Jl,[l("span",null,[l("a",Ul,[e[32]||(e[32]=t("子输入节点",-1)),o(n)])])])]),e[112]||(e[112]=l("p",null,"子流程输入节点，用于子流程中。若当前流程中含有子输入节点，作为一个普通流程来执行，不会产生任何效果。 若当前流程被其他流程使用[子流程]节点关联为子流程，则当其他流程执行至[子流程]节点时，会触发此流程的执行， 并且会将其他流程的输入参数传递至当前流程的[子输入]节点中，作为输入参数，继续执行。 若一个流程作为子流程被执行，那么[子输入]节点是非必要的，当你需要传递节点输入参数时可以使用该节点。",-1)),e[113]||(e[113]=l("p",null,[l("strong",null,"节点参数："),t(" 无")],-1)),l("h3",Al,[l("a",Vl,[l("span",null,[l("a",Xl,[e[33]||(e[33]=t("子输出节点",-1)),o(n)])])])]),e[114]||(e[114]=l("p",null,"子流程输出节点，用于子流程中。若当前流程中含有子输出节点，作为一个普通流程来执行，不会产生任何效果。 若当前流程被其他流程使用[子流程]节点关联为子流程，则当其他流程执行至[子流程]节点时，会触发此流程的执行， 并且当前流程执行至[子输出]节点时，会将节点输出参数传递至其他流程的[子流程]节点作为输出参数，继续执行。 若一个流程作为子流程被执行，那么[子输出]节点是非必要的，当你需要传递节点输出参数时可以使用该节点。",-1)),e[115]||(e[115]=l("p",null,[l("strong",null,"节点参数："),t(" 无")],-1)),e[116]||(e[116]=l("blockquote",null,[l("p",null,"子输入和子输出节点连通了子流程和父流程之间的通信，使得不同流程之间可以进行输入输出参数的传递。")],-1))])}const $l=i(p,[["render",zl]]),Kl=JSON.parse('{"path":"/Clippings/flow-eda%E5%8A%9F%E8%83%BD%E8%8A%82%E7%82%B9.html","title":"flow-eda功能节点","lang":"zh-CN","frontmatter":{"title":"flow-eda功能节点","source":"http://106.54.46.47:91/#/getting-started/flow-node","author":null,"published":null,"created":"2025-04-17T00:00:00.000Z","description":"Description","tags":["clippings"],"article":false,"head":[["meta",{"property":"og:url","content":"https://echo0d.github.io/DailyNotes/Clippings/flow-eda%E5%8A%9F%E8%83%BD%E8%8A%82%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"echo0d-notes"}],["meta",{"property":"og:title","content":"flow-eda功能节点"}],["meta",{"property":"og:description","content":"Description"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-07T01:17:50.000Z"}],["meta",{"property":"article:author","content":"echo0d"}],["meta",{"property":"article:tag","content":"clippings"}],["meta",{"property":"article:modified_time","content":"2025-05-07T01:17:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"flow-eda功能节点\\",\\"description\\":\\"Description\\"}"]]},"headers":[{"level":3,"title":"节点输入/输出","slug":"节点输入-输出","link":"#节点输入-输出","children":[]},{"level":3,"title":"节点性质类型","slug":"节点性质类型","link":"#节点性质类型","children":[]},{"level":3,"title":"开始节点","slug":"开始节点","link":"#开始节点","children":[]},{"level":3,"title":"定时器节点","slug":"定时器节点","link":"#定时器节点","children":[]},{"level":3,"title":"延时器节点","slug":"延时器节点","link":"#延时器节点","children":[]},{"level":3,"title":"输出节点","slug":"输出节点","link":"#输出节点","children":[]},{"level":3,"title":"条件节点","slug":"条件节点","link":"#条件节点","children":[]},{"level":3,"title":"序列节点","slug":"序列节点","link":"#序列节点","children":[]},{"level":3,"title":"拼接节点","slug":"拼接节点","link":"#拼接节点","children":[]},{"level":3,"title":"分割节点","slug":"分割节点","link":"#分割节点","children":[]},{"level":3,"title":"阀门节点","slug":"阀门节点","link":"#阀门节点","children":[]},{"level":3,"title":"JSON 解析节点","slug":"json-解析节点","link":"#json-解析节点","children":[]},{"level":3,"title":"HTML 解析节点","slug":"html-解析节点","link":"#html-解析节点","children":[]},{"level":3,"title":"XML 解析节点","slug":"xml-解析节点","link":"#xml-解析节点","children":[]},{"level":3,"title":"HTTP 请求节点","slug":"http-请求节点","link":"#http-请求节点","children":[]},{"level":3,"title":"HTTP 接收节点","slug":"http-接收节点","link":"#http-接收节点","children":[]},{"level":3,"title":"HTTP 响应节点","slug":"http-响应节点","link":"#http-响应节点","children":[]},{"level":3,"title":"WS 服务端节点","slug":"ws-服务端节点","link":"#ws-服务端节点","children":[]},{"level":3,"title":"WS 客户端节点","slug":"ws-客户端节点","link":"#ws-客户端节点","children":[]},{"level":3,"title":"MQTT 订阅节点","slug":"mqtt-订阅节点","link":"#mqtt-订阅节点","children":[]},{"level":3,"title":"MQTT 发布节点","slug":"mqtt-发布节点","link":"#mqtt-发布节点","children":[]},{"level":3,"title":"Email 节点","slug":"email-节点","link":"#email-节点","children":[]},{"level":3,"title":"Mysql 节点","slug":"mysql-节点","link":"#mysql-节点","children":[]},{"level":3,"title":"MongoDB 节点","slug":"mongodb-节点","link":"#mongodb-节点","children":[]},{"level":3,"title":"Redis 节点","slug":"redis-节点","link":"#redis-节点","children":[]},{"level":3,"title":"PostgreSQL 节点","slug":"postgresql-节点","link":"#postgresql-节点","children":[]},{"level":3,"title":"子流程节点","slug":"子流程节点","link":"#子流程节点","children":[]},{"level":3,"title":"子输入节点","slug":"子输入节点","link":"#子输入节点","children":[]},{"level":3,"title":"子输出节点","slug":"子输出节点","link":"#子输出节点","children":[]}],"git":{"createdTime":1746580670000,"updatedTime":1746580670000,"contributors":[{"name":"echo0d","email":"echo0d@163.com","commits":1}]},"readingTime":{"minutes":25.32,"words":7596},"filePathRelative":"Clippings/flow-eda功能节点.md","localizedDate":"2025年5月7日","excerpt":""}');export{$l as comp,Kl as data};
